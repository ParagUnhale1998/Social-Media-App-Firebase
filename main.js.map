{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/server.service.ts","./src/app/shared/caching.service.ts","./src/app/shared/data.service.ts","./src/app/shared/filter.pipe.ts","./src/app/shared/fire-auth.service.ts","./src/app/shared/firestore.service.ts","./src/app/shared/hashtag-service.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/toster.service.ts","./src/app/user/add-post/add-post.component.ts","./src/app/user/add-post/add-post.component.html","./src/app/user/all-posts/all-posts.component.ts","./src/app/user/all-posts/all-posts.component.html","./src/app/user/footer/footer.component.ts","./src/app/user/footer/footer.component.html","./src/app/user/google-login/google-login.component.ts","./src/app/user/google-login/google-login.component.html","./src/app/user/header/header.component.ts","./src/app/user/header/header.component.html","./src/app/user/instructions/instructions.component.ts","./src/app/user/instructions/instructions.component.html","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/profile/profile.component.ts","./src/app/user/profile/profile.component.html","./src/app/user/show-user-profile/show-user-profile.component.ts","./src/app/user/show-user-profile/show-user-profile.component.html","./src/app/user/sign-up/sign-up.component.ts","./src/app/user/sign-up/sign-up.component.html","./src/app/user/trending-hashtags-posts/trending-hashtags-posts.component.ts","./src/app/user/trending-hashtags-posts/trending-hashtags-posts.component.html","./src/app/user/trending-posts/trending-posts.component.ts","./src/app/user/trending-posts/trending-posts.component.html","./src/app/user/user-routing.module.ts","./src/app/user/user.component.ts","./src/app/user/user.module.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n// import { AppComponent } from './app.component';\n// import { HomeComponent } from './user/home/home.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/user', pathMatch: 'full' },  \n  {path:'user',loadChildren : () => import('./user/user.module').then(m => m.UserModule)}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit,HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'Posts';\n  windowWidth: number = window.innerWidth;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.windowWidth = event.target.innerWidth;\n  }\n\n}\n","<app-instructions></app-instructions>\n<div class=\"container\">\n  <div class=\"navContainer\">\n    <app-header></app-header>\n  </div>\n  <div class=\"mainContainer\">\n    <router-outlet></router-outlet>\n  </div>\n  <div class=\"sideContainer\">\n    <app-trending-hashtags-posts></app-trending-hashtags-posts>\n    <app-footer></app-footer>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http'\nimport { SharedModule } from './shared/shared.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UserModule } from './user/user.module';\nimport { ToastrModule } from 'ngx-toastr';\nimport {provideFirebaseApp,initializeApp} from '@angular/fire/app'\nimport {getFirestore,provideFirestore} from '@angular/fire/firestore'\nimport { getAuth, provideAuth} from '@angular/fire/auth';\n\n\n\nconst   firebaseConfig = {\n  apiKey: \"AIzaSyDaIfEelWZ13gCWHM6lWhp_kLQgrI3AiSQ\",\n  authDomain: \"social-app-posts.firebaseapp.com\",\n  projectId: \"social-app-posts\",\n  storageBucket: \"social-app-posts.appspot.com\",\n  messagingSenderId: \"514282961247\",\n  appId: \"1:514282961247:web:fe085e1d2c4f0b51575eea\"\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    NgbModule,\n    UserModule,\n    ToastrModule.forRoot(),\n    // AngularFireModule.initializeApp(environment.firebaseConfig),\n    // AngularFirestoreModule\n    provideFirebaseApp(()=> initializeApp(firebaseConfig)),\n    provideFirestore(()=> getFirestore()),\n    provideAuth(()=> getAuth()),\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServerService {\n  private baseUrl = 'http://localhost:3000';\n  private userUrl = 'http://localhost:3000/users'; \n\n  constructor(private http: HttpClient) {}\n\n \n  getAllUser(): Observable<any> {\n    return this.http.get(`${this.userUrl}`);\n  }\n\n  addUser(data: any): Observable<any> {\n    return this.http.post(`${this.userUrl}`, data);\n  }\n\n  getUser(userId: any): Observable<any> {\n    return this.http.get(`${this.userUrl}/${userId}`);\n  }\n\n  patchUser(userId: any, userData: any): Observable<any> {\n    return this.http.patch(`${this.userUrl}/${userId}`, userData);\n  }\n\n  updateUser(userId: any, userData: any): Observable<any> {\n    const patchData = { ...userData };\n    return this.http.patch(`${this.userUrl}/${userId}`, patchData);\n  }\n\n  \n}\n\n\n/*  old code without clean code\n\n  editMode :boolean = false;\n  \n  trendingHashtags: Hashtag[] = [];\n  private trendingHashtagsSubject = new BehaviorSubject<Hashtag[]>([]);\n  trendingHashtags$ = this.trendingHashtagsSubject.asObservable();\n\n  extractHashtagsFromPostContent(content: string): string[] {\n    // Regular expression to find hashtags in the post content\n    const regex = /#(\\w+)/g;\n    const matches = content.match(regex);\n\n    if (matches) {\n      // Remove the '#' character from the matches\n      return matches.map(match => match.substring(1));\n    }\n\n    return [];\n  }\n\n\n  updateTrendingHashtags(allUsers:any): void {\n    // Clear the existing trending hashtags\n    this.trendingHashtags = [];\n\n    // Your logic to extract hashtags from all posts and update the trendingHashtags array\n    const hashtagsMap: Map<string, number> = new Map();\n    allUsers.forEach((user:any) => {\n      user.posts.forEach((post:any) => {\n        const hashtags = this.extractHashtagsFromPostContent(post.content);\n        hashtags.forEach((tag:any) => {\n          const count = hashtagsMap.get(tag) || 0;\n          hashtagsMap.set(tag, count + 1);\n        });\n      });\n    });\n\n    // Convert the map to an array of Hashtag objects\n    this.trendingHashtags = Array.from(hashtagsMap.entries()).map(([name, count]) => ({ name, count }));\n\n    // Sort the trending hashtags based on count in descending order\n    this.trendingHashtags.sort((a, b) => b.count - a.count);\n\n    // Get the top ten hashtags\n    this.trendingHashtags = this.trendingHashtags.slice(0, 10);\n    this.trendingHashtagsSubject.next(this.trendingHashtags);\n\n  }\n\n\n  private userIsRegister: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n  userIsRegister$ = this.userIsRegister.asObservable();\n\n  setUserIsRegister(value: boolean) {\n    this.userIsRegister.next(value);\n  }\n\n  getUserIsRegister(): Observable<boolean> {\n    return this.userIsRegister$;\n  }\n\n  // userId:any;\n  \n  userId:any = 'ParagUnhale1998';\n  private getAllUsersFunctionSubject = new Subject<void>();\n\n  // Observable to subscribe to the getallUsers() function\n  getAllUsersFunction$ = this.getAllUsersFunctionSubject.asObservable();\n\n  // Function to emit the event to call the getallUsers() function\n  callGetAllUsersFunction() {\n    this.getAllUsersFunctionSubject.next();\n  }\n  private baseUrl = 'http://localhost:3000';\n    private userUrl = 'http://localhost:3000/users'; // Replace with your JSON server URL\n\n  constructor(private http: HttpClient, private toastr: ToastrService) { }\n\n  addUser(data:any):Observable<any>{\n    return this.http.post(`${this.userUrl}`,data)\n  }  \n\n  getAllUser(): Observable<any> {\n    return this.http.get(`${this.userUrl}`);\n  }\n \n  getUser(userId: any): Observable<any> {\n    return this.http.get(`${this.userUrl}/${userId}`); \n  }\n  patchUser(userId: any, userData: any): Observable<any> {\n    return this.http.patch(`${this.userUrl}/${userId}`, userData);\n  }\n  addPosts(userId:any,userData:any):Observable<any>{\n    const patchData = { ...userData }\n    return this.http.patch(`${this.userUrl}/${userId}`, patchData);\n  }\n\n  showSuccess(msg1:any,msg2:any,){\n    this.toastr.success(\n      msg1,\n      msg2,\n      {\n        positionClass: 'toast-top-left',\n        timeOut: 2000,\n        closeButton: true,\n      }\n    );\n\n    \n\n\n  // Add a new user\n  // addUser(user: any): Observable<any> {\n  //   return this.http.post(`${this.userUrl}`, user);\n  // }\n\n  // // Get user by ID\n  // getUser(userId: number): Observable<any> {\n  //   return this.http.get(`${this.userUrl}/${userId}`);\n  // }\n\n\n  // // Add a comment to a post\n  // addComment(userId: number, postId: number, comment: string): Observable<any> {\n  //   return this.http.post(`${this.baseUrl}/users/${userId}/posts/${postId}/comments`, { text: comment });\n  // }\n\n  // // Get comments for a post\n  // getComments(userId: number, postId: number): Observable<any> {\n  //   return this.http.get(`${this.baseUrl}/users/${userId}/posts/${postId}/comment`);\n  // }\n\n  // // Add a like to a post\n  // addLike(userId: number, postId: number): Observable<any> {\n  //   return this.http.post(`${this.baseUrl}/users/${userId}/posts/${postId}/likes`, {});\n  // }\n\n  // // Get likes for a post\n  // getLikes(userId: number, postId: number): Observable<any> {\n  //   return this.http.get(`${this.baseUrl}/users/${userId}/posts/${postId}/like`);\n  // }\n  }\n */\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CachingService {\n\n  private cache: { [key: string]: any } = {};\n\n  constructor() {}\n\n  set(key: string, data: any): void {\n    this.cache[key] = data;\n  }\n\n  get(key: string): any {\n    return this.cache[key];\n  }\n\n  clear(): void {\n    this.cache = {};\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  userInstructions:boolean =true\n  editMode: boolean = false;\n  userId: any = sessionStorage.getItem('userId')\n  // userId: any = 'ParagUnhale1998';\n  userName:any =sessionStorage.getItem('userName')\n  userProfilePic:any = sessionStorage.getItem('userProfilePic')\n \n  private userIsRegister: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(this.getUserIsRegisteredFromLocalStorage());\n\n  userIsRegister$ = this.userIsRegister.asObservable();\n\n  setUserIsRegister(value: boolean) {\n    this.userIsRegister.next(value);\n  }\n\n  getUserIsRegister(): Observable<boolean> {\n    return this.userIsRegister$;\n  }\n\n  getUserIsRegisteredFromLocalStorage(): boolean {\n    const storedValue = sessionStorage.getItem('UserIsRegister');\n    // Convert the string value to a boolean using a simple comparison.\n    return storedValue === 'true';\n  }\n\n\n  private getAllUsersFunctionSubject = new Subject<void>();\n\n  // Observable to subscribe to the getallUsers() function\n  getAllUsersFunction$ = this.getAllUsersFunctionSubject.asObservable();\n\n  // Function to emit the event to call the getallUsers() function\n  callGetAllUsersFunction() {\n    this.getAllUsersFunctionSubject.next();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(hotelsData: any[], searchInput:any): any[]  {\n    if (!hotelsData || !searchInput) {\n      return hotelsData;\n    }\n\n    searchInput = searchInput.toLowerCase();\n    return hotelsData.filter(hotel => {\n      // Modify this condition based on the property you want to search by\n      return  JSON.stringify(hotel).toLowerCase().includes(searchInput);\n    });\n\n\n}\n}","import { Injectable } from '@angular/core';\n// import { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { getAuth, sendPasswordResetEmail ,signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, Auth } from '@angular/fire/auth';\nimport { User } from '@angular/fire/auth';\nimport { DataService } from './data.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FireAuthService {\n  user: User | null = null;\n  auth: Auth;\n\n  constructor(private dataService:DataService) {\n    this.auth = getAuth();\n\n    this.auth.onAuthStateChanged((user) => {\n      this.user = user;\n      console.log(this.user)\n    });\n  }\n\n  signIn(email: string, password: string) {\n    return signInWithEmailAndPassword(this.auth, email, password);\n    \n  }\n\nasync sendPasswordResetEmail(email: string) {\n    return await sendPasswordResetEmail(this.auth, email)\n      .then(() => {\n        console.log('Password reset email sent');\n        console.log(this.auth)\n      })\n      .catch(error => {\n        console.error('Error sending password reset email', error);\n      });\n  }\n/*\n  signIn(email: string, password: string,name:any,profilepic:any) {\n    signInWithEmailAndPassword(this.auth, email, password)\n      .then(() => {\n          this.dataService.userId = email\n          this.dataService.userName = name\n           this.dataService.userProfilePic = profilepic\n        console.log('Signed in')\n      })\n      .catch(error => console.error('Sign-in error', error));\n  }*/\n  signUp(email: string, password: string) {\n    createUserWithEmailAndPassword(this.auth, email, password)\n      .then(() => console.log('User created'))\n      .catch(error => console.error('Sign-up error', error));\n  }\n\n  signOut() {\n    signOut(this.auth)\n      .then(() => console.log('Signed out'))\n      .catch(error => console.error('Sign-out error', error));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Firestore,getDoc,getDocs,setDoc,addDoc,doc,collection,collectionData,deleteDoc,updateDoc} from '@angular/fire/firestore'\nimport { CachingService } from './caching.service';\n \n@Injectable({\n  providedIn: 'root',\n})\nexport class FirestoreService {\n  constructor(private fireService:Firestore,private cachingService: CachingService) {}\n\n  getData() {\n    const cachedData = this.cachingService.get('userData');\n    if (cachedData) {\n      return cachedData;\n    }else{\n      let userCollection = collection(this.fireService,'users')\n      const data = collectionData(userCollection, { idField: 'id' });\n      this.cachingService.set('userData', data);\n      return data\n      // let userCollection = collection(this.fireService,'users')\n      // return collectionData(userCollection,{idField:'id'})\n    }\n  }\n  \n  getUserById(id: string) {\n    const userDocRef = doc(this.fireService, 'users', id);\n    return getDoc(userDocRef);\n  }\n\n  createData(data:any) {\n    let userCollection = collection(this.fireService,'users')\n    return addDoc(userCollection,data)\n  }\n\n  createUserData(userId: string, data: any) {\n    // Specify the collection reference\n    const userCollectionRef = collection(this.fireService, 'users');\n  \n    // Add a new document with the specified custom user ID\n    return setDoc(doc(userCollectionRef, userId), data);\n  }\n \n  \n  async getPostWithID(userId: string, postId: string): Promise<any> {\n    const postDocRef = doc(this.fireService, 'users', userId, 'posts', postId);\n    const postSnapshot = await getDoc(postDocRef);\n    \n    if (postSnapshot.exists()) {\n      return postSnapshot.data();\n    } else {\n      throw new Error(`Post with ID ${postId} not found.`);\n    }\n  }\n\n  async getAllUsers(): Promise<any[]> {\n    const usersCollectionRef = collection(this.fireService, 'users');\n    const usersQuerySnapshot = await getDocs(usersCollectionRef);\n  \n    const users: any[] = [];\n    usersQuerySnapshot.forEach((doc) => {\n      users.push({ id: doc.id, ...doc.data() });\n    });\n  \n    return users;\n  }\n\n  async getAllUserPosts(userId: string): Promise<any[]> {\n    const cacheKey = `userPosts_${userId}`;\n  \n    const cachedData = this.cachingService.get(cacheKey);\n    if (cachedData) {\n      console.log(`Retrieving from cache userPosts_${userId}`);\n      return cachedData;\n    } else {\n      console.log(`Fetching from Firebase userPosts_${userId}`);\n      const postsCollectionRef = collection(this.fireService, `users/${userId}/posts`);\n      const postsQuerySnapshot = await getDocs(postsCollectionRef);\n  \n      const posts: any[] = [];\n      postsQuerySnapshot.forEach((doc: any) => {\n        const postData = doc.data();\n        posts.push({ id: doc.id, ...postData });\n      });\n  \n      // Store data in cache\n      this.cachingService.set(cacheKey, posts);\n  \n      return posts;\n    }\n  }\n  \n  // async getAllUserPosts(userId: string): Promise<any[]> {\n\n  //   const postsCollectionRef = collection(this.fireService, `users/${userId}/posts`);\n  //   const postsQuerySnapshot = await getDocs(postsCollectionRef);\n\n  //   const posts: any[] = [];\n  //   postsQuerySnapshot.forEach((doc:any) => {\n  //     const postData = doc.data();\n  //     posts.push({ id: doc.id, ...postData });\n  //   });\n\n  //   return posts;\n  // }\n  async getAllPosts(): Promise<any[]> {\n    const cacheKey = 'allPosts';\n  \n    const cachedData = this.cachingService.get(cacheKey);\n    if (cachedData) {\n      return cachedData;\n    } else {\n      const postsCollectionRef = collection(this.fireService, 'posts');\n      const postsQuerySnapshot = await getDocs(postsCollectionRef);\n  \n      const posts: any[] = [];\n      postsQuerySnapshot.forEach((doc) => {\n        const postData = doc.data();\n        posts.push({ id: doc.id, ...postData });\n      });\n  \n      // Store data in cache\n      this.cachingService.set(cacheKey, posts);\n  \n      return posts;\n    }\n  }\n  \n  // async getAllPosts(): Promise<any[]> {\n  //   const postsCollectionRef = collection(this.fireService, 'posts');\n  //   const postsQuerySnapshot = await getDocs(postsCollectionRef);\n\n  //   const posts: any[] = [];\n  //   postsQuerySnapshot.forEach((doc) => {\n  //     const postData = doc.data();\n  //     posts.push({ id: doc.id, ...postData });\n  //   });\n\n  //   return posts;\n  // }\n  \n\n  async createPost(userId: string, postData: any) {\n    const postDocRef = collection(this.fireService, 'users', userId, 'posts');\n    const newPostRef = await addDoc(postDocRef, postData);\n    const newPostId = newPostRef.id;\n    postData.id = newPostId;\n\n    this.cachingService.clear();\n\n    console.log('Post data with ID:', postData);\n    await this.updatePost(userId, newPostId, { id: newPostId });\n    // return setDoc(doc(postDocRef, postId), newPostId);\n\n    // await addDoc(postDocRef, postData);\n  }\n  \n  // async updatePost(userId: string, postId: string, updatedData: any) {\n  //   const postDocRef = doc(this.fireService, 'users', userId, 'posts', postId);\n  //   await setDoc(postDocRef, updatedData, { merge: true }); // Use merge option to update without overwriting\n  // }\n\n  async deletePost(userId: string, postId: string) {\n    const postDocRef = doc(this.fireService, 'users', userId, 'posts', postId);\n    this.cachingService.clear();\n\n    await deleteDoc(postDocRef);\n  }\n  \n  async getPost(userId: string, postId: string): Promise<any> {\n    const postDocRef = doc(this.fireService, 'users', userId, 'posts', postId);\n    const postDocSnapshot = await getDoc(postDocRef);\n    if (postDocSnapshot.exists()) {\n      return postDocSnapshot.data();\n    } else {\n      return null;\n    }\n  }\n  \n  async updatePost(userId: string, postId: string, updatedData: any): Promise<void> {\n    const postDocRef = doc(collection(this.fireService, 'users', userId, 'posts'), postId);\n    await updateDoc(postDocRef, updatedData);\n  }\n\n  async addCommentToPost(userId: string, postId: string, commentData: any): Promise<void> {\n    const post = await this.getPost(userId, postId);\n    if (post) {\n      const updatedComments = [...post.comments, commentData];\n      await this.updatePost(userId, postId, { comments: updatedComments });\n    }\n  }\n\n  async incrementLikes(userId: string, postId: string): Promise<void> {\n    const post = await this.getPost(userId, postId);\n    if (post) {\n      const updatedLikes = post.likes + 1;\n      await this.updatePost(userId, postId, { likes: updatedLikes });\n    }\n  }\n\n  async updateTitleAndContent(userId: string, postId: string, newTitle: string, newContent: string): Promise<void> {\n    const post = await this.getPost(userId, postId);\n    if (post) {\n      await this.updatePost(userId, postId, { title: newTitle, content: newContent });\n    }\n  }\n  // async addPost(userId: string, postData: any): Promise<void> {\n  //   const userCollectionRef = collection(this.fireService, 'users');\n  //   const postCollectionRef = collection(doc(userCollectionRef, userId), 'posts');\n\n  //   // Add a new post document to the subcollection\n  //   await addDoc(postCollectionRef, postData);\n  // }\n\n  // createUserData(data: any) {\n  //   // Specify the collection reference\n  //   const userCollectionRef = collection(this.fireService, 'users');\n\n  //   // Add a new document with a custom user ID\n  //   return addDoc(userCollectionRef, data);\n  // }\n\n  updateData(id: string, updatedData: any) {\n    console.log(updatedData)\n    const userDocRef = doc(this.fireService, 'users', id);\n    return updateDoc(userDocRef, updatedData);\n  }\n\n\n  deleteData(id:any) {\n    let docref = doc(this.fireService,'users/'+id)\n    return deleteDoc(docref)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject} from 'rxjs';\nimport { FirestoreService } from './firestore.service';\n\nexport interface Hashtag {\n  name: string;\n  count: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HashtagServiceService {\n  \n  constructor(private fireservice:FirestoreService){}\n  trendingHashtags: Hashtag[] = [];\n  \n  private trendingHashtagsSubject = new BehaviorSubject<Hashtag[]>([]);\n  trendingHashtags$ = this.trendingHashtagsSubject.asObservable();\n\n  extractHashtagsFromPostContent(content: string): string[] {\n    // Regular expression to find hashtags in the post content\n    const regex = /#(\\w+)/g;\n    const matches = content.match(regex);\n\n    if (matches) {\n      // Remove the '#' character from the matches\n      return matches.map(match => match.substring(1));\n    }\n\n    return [];\n  }\n\n\n  updateTrendingHashtags(allPostss:any): void {\n    // Clear the existing trending hashtags\n    this.trendingHashtags = [];\n\n    // Your logic to extract hashtags from all posts and update the trendingHashtags array\n    const hashtagsMap: Map<string, number> = new Map();\n console.log('allposthashtag0,',allPostss)\n    allPostss.forEach((post:any) => {\n        const hashtags = this.extractHashtagsFromPostContent(post.content);\n        hashtags.forEach((tag:any) => {\n          const lowercaseTag = tag.toLowerCase();\n          const count = hashtagsMap.get(lowercaseTag) || 0;\n          hashtagsMap.set(lowercaseTag, count + 1);\n        });\n      });\n    \n\n    // Convert the map to an array of Hashtag objects\n    this.trendingHashtags = Array.from(hashtagsMap.entries()).map(([name, count]) => ({ name, count }));\n\n    // Sort the trending hashtags based on count in descending order\n    this.trendingHashtags.sort((a, b) => b.count - a.count);\n\n    // Get the top ten hashtags\n    this.trendingHashtags = this.trendingHashtags.slice(0, 5);\n     console.log(this.trendingHashtags)\n    this.trendingHashtagsSubject.next(this.trendingHashtags);\n\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms'\n\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,ReactiveFormsModule,NgbTooltipModule,NgbDropdownModule,MatIconModule\n\n  ],\n  exports:[\n    FormsModule,ReactiveFormsModule,NgbTooltipModule,NgbDropdownModule,MatIconModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TosterService {\n\n  constructor(private toastr: ToastrService) { }\n\n  showSuccess(msg1:any,msg2:any,){\n    this.toastr.success(\n      msg1,\n      msg2,\n      {\n        positionClass: 'toast-top-left',\n        timeOut: 2000,\n        closeButton: true,\n      }\n    );\n  }\n  \n  showWarning(msg1:any,msg2:any,){\n    this.toastr.warning(\n      msg1,\n      msg2,\n      {\n        positionClass: 'toast-top-right',\n        timeOut: 2000,\n        closeButton: true,\n      }\n    );\n  }\n\n  showError(msg1:any,msg2:any,){\n    this.toastr.error(\n      msg1,\n      msg2,\n      {\n        positionClass: 'toast-top-right',\n        timeOut: 2000,\n        closeButton: true,\n      }\n    );\n  }\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ServerService } from 'src/app/server.service';\nimport { DataService } from 'src/app/shared/data.service';\nimport { FirestoreService } from 'src/app/shared/firestore.service';\nimport { TosterService } from 'src/app/shared/toster.service';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.scss'],\n})\nexport class AddPostComponent implements OnDestroy, OnInit {\n  postForm!: FormGroup;\n  userData: any;\n  postID: any;\n  currentDate: any;\n  editmode: boolean;\n  userID: any;\n  @Input() post: any;\n  loading:boolean = false\n  postImage:any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private server: ServerService,\n    public activeModal: NgbActiveModal,\n    private modalService: NgbModal,\n    private dataService: DataService,\n    private tosterService: TosterService,\n    private fireService:FirestoreService,\n    private sanitizer: DomSanitizer\n\n\n  ) {\n    this.editmode = this.dataService.editMode;\n    const date = new Date();\n    this.currentDate = date.toLocaleString();\n  }\n\n  ngOnInit() {\n    this.createPostForm();\n    this.userID = this.dataService.userId;\n    // console.log(this.dataService.userId)\n    this.fireService.getUserById(this.userID).then((docSnapshot) => {\n      if(docSnapshot.exists()){\n        this.userData = docSnapshot.data();\n        // this.postID = this.userData.posts.length + 1;\n      }else{\n        console.log('User not found');\n\n      }\n    }).catch((error)=> {\n      console.error('Data Not Fetched', error);\n    })\n    \n    if (this.editmode) {\n      if (this.post) {\n        console.log(this.post)\n        this.postForm.patchValue({\n          title: this.post.title,\n          content: this.post.content,\n          image:this.post.image\n        });\n      } else {\n        this.tosterService.showError('not found in user data', 'failed');\n        console.log(`Post with ID ${this.post.id} not found in user data.`);\n      }\n    }\n  }\n\n  createPostForm() {\n    this.postForm = this.formBuilder.group({\n      userId: [this.userID],\n      title: ['', Validators.required],\n      content: ['', Validators.required],\n      image: [''],\n      likes: [0],\n      comments: this.formBuilder.array([]),\n    });\n  }\n\n  \n  onFileSelected(event: any) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      this.postImage = reader.result as string;\n      // Store this in your form or the data object you're sending to Firestore\n    };\n  }\n\n async onSubmit() {\n    if (this.postForm.valid) {\n      this.loading =true\n      if (this.userID) {\n        const userId = this.userID;\n        const postData = this.postForm.value;\n        postData.userId = userId\n        \n        // postData.postImage = this.postImage || '';\n        if (!this.postImage) {\n          postData.postImage = this.post?.image || ''; // Preserve the existing image if no new image is selected\n        } else {\n          postData.postImage = this.postImage;\n        }\n  //       const sanitizedImageUrl = this.sanitizer.bypassSecurityTrustUrl(postData.image);\n  // postData.image = sanitizedImageUrl;\n        // postData.id = this.editmode ? this.post.id : this.userData.posts.length + 1;\n        const successMessage = this.editmode ? 'Post Edited Successfully' : 'Post Added Successfully';\n        const errorMessage = this.editmode ? 'not found in user data' : 'Failed to add Post';\n       \n        postData.createdAt = this.currentDate;\n\n        if (this.editmode) {\n          postData.likes = this.post.likes;\n          postData.comments = this.post.comments;\n          postData.createdAt = this.post.createdAt;\n          const postId = this.post.id\n          // const posts = await this.fireService.getAllUserPosts(userId)\n     \n          // const postIndex = posts.findIndex(\n          //   (post: any) => post.id === this.post.id\n          // );\n          // if (postIndex !== -1) {\n          //   this.userData.posts[postIndex] = postData;\n            this.fireService.updatePost(userId,postId,postData).then((data) => {\n              this.tosterService.showSuccess(successMessage, 'Success');\n              this.resetFormAndCloseModal()\n            }).catch(err => { \n              this.tosterService.showError(errorMessage, 'Error');\n            console.log(`Post with ID ${postData.id} not found in user data.`);\n            })\n        } \n        \n        else {\n\n          this.fireService.createPost(postData.userId,postData).then(() => {\n            console.log(\"User data updated successfully\");\n            this.loading =false\n            this.tosterService.showSuccess('Post Added Successfully','Success');\n            this.resetFormAndCloseModal()\n          }).catch((error) => {\n            this.tosterService.showError(errorMessage,'Error');\n            console.error(\"Error updating user data:\", error);\n                        this.loading =false\n\n          })\n        }\n      }\n    }\n\n  }\n  resetFormAndCloseModal() {\n    this.postForm.reset();\n    this.modalService.dismissAll();\n    this.activeModal.close();\n    this.dataService.editMode = false;\n    this.loading =false\n  }\n\n  close() {\n    this.activeModal.close();\n  }\n  ngOnDestroy(): void {\n    this.dataService.editMode = false;\n  }\n}\n/*import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ServerService } from 'src/app/server.service';\nimport { DataService } from 'src/app/shared/data.service';\nimport { HashtagServiceService } from 'src/app/shared/hashtag-service.service';\nimport { TosterService } from 'src/app/shared/toster.service';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.scss'],\n})\nexport class AddPostComponent implements OnDestroy, OnInit {\n  postForm!: FormGroup;\n  userData: any;\n  postID: any;\n  currentDate: any;\n  editmode: boolean;\n  userID: any;\n  @Input() post: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private server: ServerService,\n    public activeModal: NgbActiveModal,\n    private modalService: NgbModal,\n    private dataService: DataService,\n    private tosterService: TosterService\n  ) {\n    this.editmode = this.dataService.editMode;\n    const date = new Date();\n    this.currentDate = date.toLocaleString();\n  }\n\n  ngOnInit() {\n    this.createPostForm();\n    this.userID = this.dataService.userId;\n    this.server.getUser(this.userID).subscribe((data) => {\n      this.userData = data;\n      this.postID = this.userData.posts.length + 1;\n    });\n\n    if (this.editmode) {\n      if (this.post) {\n        this.postForm.patchValue({\n          title: this.post.title,\n          content: this.post.content,\n          image: this.post.image,\n        });\n      } else {\n        this.tosterService.showError('not found in user data', 'failed');\n        console.log(`Post with ID ${this.post.id} not found in user data.`);\n      }\n    }\n  }\n\n  createPostForm() {\n    this.postForm = this.formBuilder.group({\n      userId: [this.userID],\n      title: ['', Validators.required],\n      content: ['', Validators.required],\n      image: [''],\n      likes: [0],\n      comments: this.formBuilder.array([]),\n    });\n  }\n\n  onSubmit() {\n    if (this.postForm.valid) {\n      if (this.userID) {\n        const userId = this.userID;\n        const postData = this.postForm.value;\n        postData.id = this.editmode\n          ? this.post.id\n          : this.userData.posts.length + 1;\n        postData.createdAt = this.currentDate;\n\n        if (this.editmode) {\n          postData.likes = this.post.likes;\n          postData.comments = this.post.comments;\n          postData.createdAt = this.post.createdAt;\n          const postIndex = this.userData.posts.findIndex(\n            (post: any) => post.id === this.post.id\n          );\n          if (postIndex !== -1) {\n            this.userData.posts[postIndex] = postData;\n            this.server.addPosts(userId, this.userData).subscribe((res) => {\n              this.tosterService.showSuccess(\n                'Post Edited Successfully',\n                'Success'\n              );\n              this.postForm.reset();\n              this.modalService.dismissAll();\n              this.dataService.editMode = false;\n\n              // this.server.callGetAllUsersFunction();\n            });\n          } else {\n            this.tosterService.showError('not found in user data', 'failed');\n            console.log(`Post with ID ${postData.id} not found in user data.`);\n          }\n        } else {\n          this.userData.posts.push(postData);\n          this.server.addPosts(userId, this.userData).subscribe({\n            next: (res) => {\n              this.tosterService.showSuccess(\n                'Post Added Successfully',\n                'Success'\n              );\n              this.postForm.reset();\n              this.modalService.dismissAll();\n              // this.server.callGetAllUsersFunction();\n            },\n            error: (error) => {\n              this.tosterService.showError('Failed to add Post', 'Error');\n              console.log('Failed to add Post',error)\n            },\n          });\n        }\n      }\n    }\n  }\n\n  close() {\n    this.activeModal.close();\n  }\n  ngOnDestroy(): void {\n    this.dataService.editMode = false;\n  }\n}\n*/","<div class=\"container\">\n  <div class=\"headerContainer\">\n    <h3>Create Post</h3><a (click)=\"close()\">&#10060;</a>\n  </div>\n  <form [formGroup]=\"postForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"title\">Question:</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"title\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"content\">Answer:</label>\n      <textarea class=\"form-control\" formControlName=\"content\"></textarea>\n    </div>\n    <div class=\"imgContainer\"  *ngIf=\"!editmode\">\n    <div class=\"form-group\" >\n      <label for=\"image\">Image:</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"image\" #img placeholder=\"Add Image Link or Choose File\"/>\n    </div>\n    <div>\n      <label for=\"username\">Profile Pic : </label>\n      <input type=\"file\" id=\"postImage\"  formControlName=\"postImage\"  placeholder=\"Add Image Link\" (change)=\"onFileSelected($event)\" accept=\"image/*\">\n    </div>\n    <div class=\"form-group img-form\" >\n      <img [src]=\"img.value || postImage\" class=\"img-fluid\" />\n    </div>\n  </div>\n    <button type=\"submit\" [disabled]=\"!postForm.valid\">{{editmode ? 'Update Post ' :' Add Post'}}</button>\n  </form>\n  <button *ngIf=\"loading\" mdbBtn class=\"btn btn-dark\" color=\"dark\" type=\"button\" disabled>\n    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n    Loading...\n  </button>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ServerService } from 'src/app/server.service';\nimport { DataService } from 'src/app/shared/data.service';\nimport { FirestoreService } from 'src/app/shared/firestore.service';\nimport { HashtagServiceService } from 'src/app/shared/hashtag-service.service';\n\n@Component({\n  selector: 'app-all-posts',\n  templateUrl: './all-posts.component.html',\n  styleUrls: ['./all-posts.component.scss'],\n})\nexport class AllPostsComponent {\n  allUsers: any[] = [];\n  newComment: string = '';\n  userdata: any;\n  userIsRegistered: boolean = false;\n  visibleComments: number = 2;\n  likedPosts: Set<string> = new Set();\n  latestPosts: any[] = [];\n  displayedPosts: any[] = [];\n  initialPostsToShow: number = 10;\n  // allPosts: any[] = [];\n  searchInput: any;\n  hashtagName: string = '';\n  filteredPosts: any[] = [];\n  allPostss: any[] = [];\n  constructor(\n    private server: ServerService,\n    private dataService: DataService,\n    private hashtagService: HashtagServiceService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fireservice: FirestoreService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe((params) => {\n      this.hashtagName = params.get('hashtag') || '';\n      console.log(this.hashtagName);\n      this.filterPostsByHashtag()\n      // this.loadUserData();\n    });\n\n    this.dataService.getUserIsRegister().subscribe((isRegistered) => {\n      this.userIsRegistered = isRegistered;\n    });\n\n    const likedPostsString = localStorage.getItem('likedPosts');\n    if (likedPostsString) {\n      console.log(likedPostsString);\n      this.likedPosts = new Set(JSON.parse(likedPostsString));\n    }\n    this.loadAllUserPosts();\n  }\n\n  loadUserData() {\n    this.dataService.getAllUsersFunction$.subscribe(() => {\n      this.filterPostsByHashtag();\n    });\n  }\n\n  async loadAllUserPosts() {\n    try {\n      this.allUsers = await this.fireservice.getAllUsers();\n      console.log('All users:', this.allUsers);\n\n      for (const user of this.allUsers) {\n        const UserallPosts = await this.fireservice.getAllUserPosts(user.id);\n        console.log(`Posts for user ${user.id}:`, UserallPosts);\n\n        // Update each post with username and userprofilepic\n        const updatedPosts = UserallPosts.map((post) => {\n          return {\n            ...post,\n            name: user.name, // Replace with the actual property name in your user object\n            profilePic: user.profilePic, // Replace with the actual property name in your user object\n          };\n        });\n\n        this.allPostss.push(...updatedPosts);\n        console.log(this.allPostss);\n      }\n      this.allPostss.sort((a, b) => {\n        const dateA = new Date(a.createdAt).getTime();\n        const dateB = new Date(b.createdAt).getTime();\n        return dateB - dateA;\n      });\n      this.displayedPosts = this.allPostss.slice(0, this.initialPostsToShow);\n      this.hashtagService.updateTrendingHashtags(this.allPostss);\n      // this.filterPostsByHashtag();\n    } catch (error) {\n      console.error('Error fetching users and posts:', error);\n    }\n    console.log(this.allPostss);\n  }\n\n  filterPostsByHashtag() {\n    this.filteredPosts = [];\n    this.allPostss.forEach((post: any) => {\n      const hashtags = this.hashtagService.extractHashtagsFromPostContent(\n        post.content\n      );\n      if (hashtags.includes(this.hashtagName)) {\n        this.filteredPosts.push(post);\n      }\n    });\n\n    this.filteredPosts.sort(\n      (a: any, b: any) =>\n        new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n    );\n    console.log('filetpost', this.filteredPosts);\n  }\n\n  showMorePosts() {\n    // Calculate the index of the last post to be displayed after adding more posts\n    const endIndex = this.displayedPosts.length + this.initialPostsToShow;\n    // Get the additional posts to be displayed\n    const additionalPosts = this.allPostss.slice(\n      this.displayedPosts.length,\n      endIndex\n    );\n    // Add the additional posts to the displayedPosts array\n    this.displayedPosts.push(...additionalPosts);\n  }\n\n  async addlike(post: any) {\n    const userId = post.userId;\n    const postId = post.id;\n\n    if (this.likedPosts.has(postId)) {\n      console.log('Post is already liked by the user.');\n    } else {\n      // Increment the likes count and add the post ID to the likedPosts Set\n      post.likes++;\n      this.likedPosts.add(postId);\n      localStorage.setItem(\n        'likedPosts',\n        JSON.stringify(Array.from(this.likedPosts))\n      );\n\n      const postIndex = this.allPostss.findIndex((p: any) => p.id === post.id);\n\n      if (postIndex !== -1) {\n        // Update the userdata with the modified post\n        this.allPostss[postIndex] = post;\n\n        await this.fireservice.incrementLikes(userId, postId);\n\n        // Reload or refresh the post after incrementing likes\n        // ...\n      }\n    }\n  }\n  async addComment(post: any, commentText: string) {\n    console.log(this.newComment);\n    if (commentText.trim() === '') {\n      return;\n    }\n\n    const userId = post.userId;\n    const postId = post.id;\n\n    const newComment = {\n      id: post.comments.length + 1,\n      postId: post.id,\n      postUserId: post.userId,\n      userName: this.dataService.userName,\n      userProfile: this.dataService.userProfilePic,\n      userId: this.dataService.userId, // Replace with the ID of the currently logged-in user\n      comment: commentText,\n    };\n\n    post.comments.push(newComment);\n\n    const postIndex = this.allPostss.findIndex((p: any) => p.id === post.id);\n\n    if (postIndex !== -1) {\n      this.allPostss[postIndex] = post;\n      await this.fireservice.addCommentToPost(userId, postId, newComment);\n    }\n\n    this.newComment = '';\n  }\n\n  showMoreComments() {\n    this.visibleComments += 2;\n  }\n\n  navigateToUser(post: any) {\n    // this.router.navigateByUrl('/showUser')\n    this.router.navigateByUrl(`/profile?id=${post.userId}`);\n  }\n}\n/*\n  private updatePostInUserData(updatedPost: any) {\n    this.userdata = this.allUsers.find(\n      (user) => user.username === updatedPost.userId\n    );\n\n    if (this.userdata) {\n      const postIndex = this.userdata.posts.findIndex(\n        (p: any) => p.id === updatedPost.id\n      );\n\n      if (postIndex !== -1) {\n        this.userdata.posts[postIndex] = updatedPost;\n\n        this.server.updateUser(this.userdata.id, this.userdata).subscribe({\n          next: () => {\n            console.log('User data updated successfully with new content');\n          },\n          error: (error) => {\n            console.error('Error updating user data:', error);\n          },\n        });\n      } else {\n        console.log(`Post with ID ${updatedPost.id} not found in user data.`);\n      }\n    } else {\n      console.log(`User with username ${updatedPost.userId} not found.`);\n    }\n  }*/\n/* old code without clean\nimport { Component} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServerService } from 'src/app/server.service';\nimport { DataService } from 'src/app/shared/data.service';\nimport { HashtagServiceService } from 'src/app/shared/hashtag-service.service';\n\n@Component({\n  selector: 'app-all-posts',\n  templateUrl: './all-posts.component.html',\n  styleUrls: ['./all-posts.component.scss'],\n})\nexport class AllPostsComponent{\n\n  allUsers: any[] = [];\n  newComment: string = '';\n  userdata: any;\n  userIsRegistered: boolean = false;\n  visibleComments: number = 2; // Number of comments initially visible\n  likedPosts: Set<string> = new Set(); // Set to store liked post IDs for the current user\n  latestPosts: any[] = [];\n  displayedPosts: any[] = [];\n  initialPostsToShow: number = 10;\n  allPosts: any[] = [];\n  searchInput:any;\n  hashtagName: string = '';\n  filteredPosts: any[] = [];\n  \n  constructor(private server: ServerService,private dataService:DataService,private hashtagService:HashtagServiceService ,private route: ActivatedRoute) {\n    this.dataService.getAllUsersFunction$.subscribe(() => {\n      this.getallUsers();\n    });\n    this.getallUsers()\n  }\n\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe((params) => {\n      this.hashtagName = params.get('hashtag') || '';\n      // this.getallUsers()\n    });\n\n    this.dataService.getUserIsRegister().subscribe((isRegistered) => {\n      this.userIsRegistered = isRegistered;\n    });\n   \n    const likedPostsString = localStorage.getItem('likedPosts');\n    if (likedPostsString) {\n      console.log(likedPostsString)\n      this.likedPosts = new Set(JSON.parse(likedPostsString));\n    }\n\n   \n    \n  }\n \n  getallUsers(){\n    this.server.getAllUser().subscribe((users) => {\n      this.allUsers = users;\n      this.hashtagService.updateTrendingHashtags(this.allUsers);\n      this.getLatestPosts()\n      this.filterPostsByHashtag();\n    });\n  }\n \n  filterPostsByHashtag() {\n    this.filteredPosts = [];\n\n    this.allUsers.forEach((user: any) => {\n      user.posts.forEach((post: any) => {\n        const hashtags = this.hashtagService.extractHashtagsFromPostContent(post.content);\n        if (hashtags.includes(this.hashtagName)) {\n          post.profilePic = user.profilePic;\n          post.name = user.name;\n          this.filteredPosts.push(post);\n           this.filteredPosts.sort((a: any, b: any) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n           console.log(this.filteredPosts)\n        }\n      });\n    });\n  }\n\n  getLatestPosts() {\n\n    this.allUsers.forEach((user) => {\n      if (user.posts.length > 0) {\n        user.posts.forEach((post: any) => {\n          post.profilePic = user.profilePic;\n          post.name = user.name;\n        });\n\n        // Sort the posts of each user in descending order based on the 'createdAt' property (latest first)\n        user.posts.sort((a: any, b: any) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n        // Add all posts of the user to the latestPosts array\n        this.latestPosts.push(...user.posts);\n      }\n    });\n  \n    // Sort the latestPosts array in descending order based on the 'createdAt' property (latest first)\n    this.latestPosts.sort((a: any, b: any) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n  \n    // Get the first 10 posts initially\n    this.displayedPosts = this.latestPosts.slice(0, this.initialPostsToShow);\n  }\n  \n  showMorePosts() {\n    // Calculate the index of the last post to be displayed after adding more posts\n    const endIndex = this.displayedPosts.length + this.initialPostsToShow;\n    // Get the additional posts to be displayed\n    const additionalPosts = this.latestPosts.slice(this.displayedPosts.length, endIndex);\n    // Add the additional posts to the displayedPosts array\n    this.displayedPosts.push(...additionalPosts);\n  }\n\n  addlike(post: any) {\n    // Check if the post is already liked by the user\n    if (this.likedPosts.has(post.id)) {\n      console.log('Post is already liked by the user.');\n    } else {\n      // Increment the likes count and add the post ID to the likedPosts Set\n      post.likes++;\n      this.likedPosts.add(post.id);\n      localStorage.setItem('likedPosts', JSON.stringify(Array.from(this.likedPosts)));\n\n      this.userdata = this.allUsers.find(\n        (user) => user.username === post.userId\n      );\n\n      if (this.userdata) {\n        // Find the index of the post in the userdata's posts array\n        const postIndex = this.userdata.posts.findIndex(\n          (p: any) => p.id === post.id\n        );\n\n        if (postIndex !== -1) {\n          // Update the userdata with the modified post\n          this.userdata.posts[postIndex] = post;\n          console.log(this.userdata);\n          // Save the updated userdata to the server or wherever you are storing the data\n          this.server\n            .addPosts(this.userdata.id, this.userdata)\n            .subscribe(() => {\n              console.log('User updated successfully with new comment');\n              // alert('Comments added successfully');\n            });\n        } else {\n          console.log(`Post with ID ${post.id} not found in user data.`);\n        }\n      } else {\n        console.log(`User with username ${post.userId} not found.`);\n      }\n    }\n  }\n\n  addComment(post: any, commentText: string) {\n    if (commentText.trim() !== '') {\n      const newComment = {\n        id: post.comments.length + 1,\n        postId: post.id,\n        postUserId: post.userId,\n        userId: this.dataService.userId, // Replace with the ID of the currently logged-in user\n        comment: commentText,\n      };\n\n      post.comments.push(newComment);\n\n      // Find the user data associated with the post\n      this.userdata = this.allUsers.find(\n        (user) => user.username === post.userId\n      );\n\n      if (this.userdata) {\n        // Find the index of the post in the userdata's posts array\n        const postIndex = this.userdata.posts.findIndex(\n          (p: any) => p.id === post.id\n        );\n\n        if (postIndex !== -1) {\n          // Update the userdata with the modified post\n          this.userdata.posts[postIndex] = post;\n          console.log(this.userdata);\n          // Save the updated userdata to the server or wherever you are storing the data\n          this.server\n            .addPosts(this.userdata.id, this.userdata)\n            .subscribe(() => {\n              console.log('User updated successfully with new comment');\n              // alert('Comments added successfully');\n            });\n        } else {\n          console.log(`Post with ID ${post.id} not found in user data.`);\n        }\n      } else {\n        console.log(`User with username ${post.userId} not found.`);\n      }\n\n  \n      this.newComment = '';\n    }\n  }\n  showMoreComments() {\n   \n    this.visibleComments += 2; \n\n  }\n}\n*/\n","<div class=\"search-container\">\n  <input type=\"text\" class=\"search-input\" placeholder=\"Search ... Questions.. \" aria-label=\"Search\"\n    [(ngModel)]=\"searchInput\">\n</div>\n<div class=\"allusersContainer\">\n  <div *ngFor=\"let post of (filteredPosts.length > 0 ? filteredPosts : displayedPosts) | filter : searchInput\" class=\"postContainer\">\n    <div class=\"postNameHeading\" (click)=\"navigateToUser(post)\"><img [src]=\"post.profilePic\" class=\"postProPIc\"><h5>{{post.name }}</h5></div>\n    <!-- <p>{{post.userId}}</p> -->\n    <h3>{{ post.title }}</h3>\n    <p><strong>Answer:</strong> {{ post.content }}</p>\n    <img [src]=\"post.image ||post.postImage\" alt=\"\">\n    <hr>\n    <button class=\"btn btn-primary likebtn\" *ngIf=\"!userIsRegistered\"> {{ post.likes }} {{ post.likes === 1 ? 'Like' :\n      'Likes' }}</button>\n    <!-- Input for adding comments -->\n    <div *ngIf=\"userIsRegistered\" class=\"likeCommentContainer\">\n      <div class=\"likeContainer\">\n        <button class=\"btn btn-primary\" (click)=\"addlike(post)\" *ngIf=\"userIsRegistered\">\n          {{ post.likes }} {{ post.likes === 1 ? 'Like' : 'Likes' }}\n        </button>\n      </div>\n      <div class=\"commentContainer\">\n        <input type=\"text\" placeholder=\"Add a comment\" #comments>\n        <button class=\"btn btn-dark\" (click)=\"addComment(post, comments.value)\">\n          Add Comment</button>\n      </div>\n\n    </div>\n    <!-- Comments section -->\n    <div *ngIf=\"post.comments.length > 0\" class=\"allcommentContainer\">\n      <h5>All Comments</h5>\n      <div class=\"userCommentsContainer\">\n        <div *ngFor=\"let comment of post.comments.slice(0, visibleComments)\" class=\"commenteuser\">\n          <div class=\"userHeadingContainer\"> <img class=\"commentPorfilePic\" [src]=\"comment.userProfile\"><strong>{{ comment.userName }}</strong></div>\n          <p>{{ comment.comment }}</p>\n        </div>\n      </div>\n      <button class=\"btn btn-dark\" *ngIf=\"post.comments.length > visibleComments\" (click)=\"showMoreComments()\">\n        Show more comments\n      </button>\n    </div>\n    <hr>\n  </div>\n  <div class=\"showMoreContainer showMore\">\n    <button class=\"btn btn-dark\" *ngIf=\"displayedPosts.length < allPostss.length\" (click)=\"showMorePosts()\">\n      Show more posts\n    </button>\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {\n\n}\n","<footer>\n    <div class=\"container\">\n      <p>&copy; 2023 Your Website. All rights reserved. &#64;paragUnhale</p>\n    </div>\n  </footer>\n  ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-google-login',\n  templateUrl: './google-login.component.html',\n  styleUrls: ['./google-login.component.scss']\n})\nexport class GoogleLoginComponent {\n\n  gmailLoginSuccsfull(response:any){\n    console.log('login succesfull',response)\n  }\n}\n","<div id=\"g_id_onload\"\n     data-client_id=\"427625286453-ln53l9ng9g08ki9oaf7nsdpu5atqoel5.apps.googleusercontent.com\"\n     data-context=\"signin\"\n     data-ux_mode=\"popup\"\n     data-callback=\"gmailLoginSuccsfull\"\n     data-auto_select=\"true\"\n     data-itp_support=\"true\">\n</div>\n\n<div class=\"g_id_signin\"\n     data-type=\"standard\"\n     data-shape=\"pill\"\n     data-theme=\"filled_black\"\n     data-text=\"signin_with\"\n     data-size=\"large\"\n     data-logo_alignment=\"left\">\n</div>","import { Component, OnInit } from '@angular/core';\nimport {  Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { LoginComponent } from '../login/login.component';\nimport { AddPostComponent } from '../add-post/add-post.component';\nimport { DataService } from 'src/app/shared/data.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  userIsRegister: boolean = false;\n  activeButton: string = 'Home';\n  constructor(\n    private router: Router,\n    private modalService: NgbModal,\n    private dataService :DataService,\n   \n  ) {}\n\n  ngOnInit(): void {\n    \n    this.dataService.getUserIsRegister().subscribe((value) => {\n      this.userIsRegister = value;\n    });\n  }\n\n  navigateToHome() {\n    this.activeButton = 'Home';\n    this.router.navigateByUrl('/user');\n\n  }\n  navigateToLogin() {\n    this.activeButton = 'Login';\n\n    this.modalService.open(LoginComponent, { centered: true, backdrop: true });\n  }\n  navigateToCreatePost() {\n    this.activeButton = 'CreatePost';\n    this.modalService.open(AddPostComponent, { centered: true, backdrop: true });\n  }\n  navigateToLoginProfile(){\n    this.activeButton = 'profile';\n    this.router.navigateByUrl('profile')\n\n  }\n  logout() {\n    sessionStorage.setItem('userId','');\n    sessionStorage.setItem('userName','');\n    sessionStorage.setItem('userProfilePic','');\n    sessionStorage.setItem('UserIsRegister', 'false');\n    this.dataService.userId =sessionStorage.getItem('userId')\n    this.dataService.userName =sessionStorage.getItem('userName')\n    this.dataService.userProfilePic = sessionStorage.getItem('userProfilePic')\n    this.dataService.setUserIsRegister(this.dataService.getUserIsRegisteredFromLocalStorage());\n    // this.dataService.setUserIsRegister(false);\n    this.router.navigateByUrl('/');\n  }\n}\n","<nav>\n    <div class=\"logoContaienr\">\n        <img src=\"https://icon-library.com/images/me-icon/me-icon-12.jpg\" alt=\"\">\n        <h2>Answers</h2>\n    </div>\n    <div class=\"links\">\n        <button class=\"btn\"  (click)=\"navigateToHome()\" [ngClass]=\"{ 'active': activeButton === 'Home' }\"><mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" fontIcon=\"home\"></mat-icon><span>Home</span></button>\n        <button class=\"btn\" (click)=\"navigateToLogin()\" *ngIf=\"!userIsRegister\" [ngClass]=\"{ 'active': activeButton === 'Login' }\"><mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" fontIcon=\"login\"></mat-icon><span>log in/Sign up</span></button>\n        <button class=\"btn\" (click)=\"navigateToCreatePost()\" *ngIf=\"userIsRegister\" [ngClass]=\"{ 'active': activeButton === 'CreatePost' }\"><mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" fontIcon=\"add_circle\"></mat-icon><span>Create Post</span></button>\n        <button class=\"btn\" (click)=\"navigateToLoginProfile()\" *ngIf=\"userIsRegister\" [ngClass]=\"{ 'active': activeButton === 'profile' }\"><mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" fontIcon=\"person\"></mat-icon><span>Profile</span></button>\n        <button class=\"btn\" (click)=\"logout()\" *ngIf=\"userIsRegister\"><mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" fontIcon=\"logout\"></mat-icon><span>Logout</span></button>\n    </div>\n  \n</nav>","import { Component } from '@angular/core';\nimport { DataService } from 'src/app/shared/data.service';\n\n@Component({\n  selector: 'app-instructions',\n  templateUrl: './instructions.component.html',\n  styleUrls: ['./instructions.component.scss']\n})\nexport class InstructionsComponent {\n  instructions:boolean =false\n\n  constructor(private userService:DataService){\n    this.instructions=this.userService.userInstructions\n  }\n  closeModal(){\n    this.userService.userInstructions = false\n    this.instructions = false\n  }\n}\n","<div class=\"modal-container\" *ngIf=\"instructions\">\n    <!-- Modal Content -->\n    <div class=\"modal-content\">\n      <h2>Welcome to My Website!</h2>\n      <p>Thank you for visiting. Here are some instructions:</p>\n\n      <!-- Instructions -->\n      <ul>\n        <li class=\"intro1\">Wait for 1 minute to allow backend data to load.</li>\n        <li class=\"intro2\">Use the following credentials for testing:</li>\n          <li>User ID: <span class=\"highlight\">ParagUnhale1998@gmail.com</span>, Password: <span class=\"highlight\">parag123</span></li>\n          <li>OR</li>\n          <li>Create Account ,Update Account , Add Post , Add Comments , Add Likes</li>\n          <li>Use all functionalities for Better User Experience</li>\n          <li>Wait For update Realtime Backend Data From Firebase</li>\n      </ul>\n\n      <p>Feel free to explore and check out all the functionalities!</p>\n\n      <!-- Close Button -->\n      <button class=\"close-button\" (click)=\"closeModal()\">Close</button>\n    </div>\n  </div>","import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ServerService } from 'src/app/server.service';\nimport { SignUpComponent } from '../sign-up/sign-up.component';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DataService } from 'src/app/shared/data.service';\nimport { TosterService } from 'src/app/shared/toster.service';\nimport { FirestoreService } from 'src/app/shared/firestore.service';\nimport { FireAuthService } from 'src/app/shared/fire-auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  loginForm!: FormGroup;\n  forgotPasswordForm!: FormGroup;\n  userData: any;\n  userIsRegister: boolean = false;\n  forgotPassword: boolean = false;\n  loader: boolean = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private server: ServerService,\n    private router: Router,\n    private modalService: NgbModal,\n    public activeModal: NgbActiveModal,\n    private dataService: DataService,\n    private tosterService: TosterService,\n    private fireService: FirestoreService,\n    private fireAuth: FireAuthService\n  ) {\n    this.loginformUser();\n  }\n\n  loginformUser() {\n    this.loginForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  forgetPasswordForm() {\n    this.forgotPasswordForm = this.formBuilder.group({\n      email: ['', Validators.required],\n    });\n  }\n\n  forgetpassword() {\n    this.forgetPasswordForm();\n    this.forgotPassword = true;\n  }\n\n  resetPassword() {\n    this.loader = true;\n    const id = this.forgotPasswordForm.value.email;\n    if (id) {\n      this.fireAuth\n        .sendPasswordResetEmail(id)\n        .then((res) => {\n          this.tosterService.showSuccess('Password reset email sent successfully', 'Success');\n          this.modalService.dismissAll();\n          this.activeModal.close();\n          this.loader = false;\n          console.log('Password reset email sent successfully');\n          console.log(res);\n          // You can show a success message to the user\n        })\n        .catch((error) => {\n          console.error('Error sending password reset email', error);\n          // Handle the error, show an error message to the user, etc.\n        });\n    }\n  }\n\n  onLogin() {\n    if (this.loginForm.valid) {\n      this.loader = true;\n      const userId = this.loginForm.value.id;\n      const password = this.loginForm.value.password;\n\n      // Use a query to retrieve the document based on your custom ID\n      this.fireService\n        .getUserById(userId)\n        .then((docSnapshot) => {\n          if (docSnapshot.exists()) {\n            const userData = docSnapshot.data();\n            console.log(userData);\n\n            this.fireAuth\n              .signIn(userId, password)\n              .then(() => {\n                sessionStorage.setItem('userId', userId);\n                sessionStorage.setItem('userName', userData['name']);\n                sessionStorage.setItem(\n                  'userProfilePic',\n                  userData['profilePic']\n                );\n                sessionStorage.setItem('UserIsRegister', 'true');\n\n                console.log(\n                  this.dataService.userId,\n                  this.dataService.userName,\n                  this.dataService.getUserIsRegister()\n                );\n                this.dataService.userId = sessionStorage.getItem('userId');\n                this.dataService.userName = sessionStorage.getItem('userName');\n                this.dataService.userProfilePic =\n                  sessionStorage.getItem('userProfilePic');\n                this.dataService.setUserIsRegister(\n                  this.dataService.getUserIsRegisteredFromLocalStorage()\n                );\n                this.handleSuccessfulLogin(userId);\n                console.log('Signed in');\n              })\n              .catch((error) => {\n                this.loader = false;\n                // Handle error in the component\n                console.error('Error in component', error);\n                this.handleLoginFailure();\n              });\n          } else {\n            console.log('User not found');\n            this.loader = false;\n          }\n        })\n        .catch((error) => {\n          this.loader = false;\n          console.error('Error getting user data:', error);\n        });\n    }\n  }\n\n  private handleSuccessfulLogin(userId: string) {\n    this.tosterService.showSuccess('Login Successful', 'Success');\n    // this.dataService.userId = userId;\n    this.modalService.dismissAll();\n    this.activeModal.close();\n    this.loader = false;\n  }\n\n  private handleLoginFailure() {\n    this.tosterService.showError(\n      'Incorrect username or password',\n      'Login Failed'\n    );\n  }\n\n  navigateToSignUp() {\n    this.activeModal.close();\n    this.modalService.open(SignUpComponent, { centered: true });\n  }\n}\n\n/* old code without clean\nimport { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ServerService } from 'src/app/server.service';\nimport { SignUpComponent } from '../sign-up/sign-up.component';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DataService } from 'src/app/shared/data.service';\nimport { TosterService } from 'src/app/shared/toster.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  loginForm!: FormGroup;\n  userData: any;\n  userIsRegister: boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private server: ServerService,\n    private router: Router,\n    private modalService: NgbModal,\n    public activeModal: NgbActiveModal,\n    private dataService :DataService,\n    private tosterService : TosterService\n   \n  ) {\n    this.loginformUser();\n  }\n\n  loginformUser() {\n    this.loginForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm.valid) {\n      const userId = this.loginForm.value.id;\n      const password = this.loginForm.value.password;\n\n      this.server.getUser(userId).subscribe((item) => {\n        this.userData = item;\n        if (this.userData && this.userData.password === password) {\n         this.tosterService.showSuccess('login Succesfull','Successfull')\n          this.dataService.userId = userId;\n          // sessionStorage.setItem('userId', userId);\n\n          this.dataService.setUserIsRegister(true);\n          this.dataService.getUserIsRegister().subscribe((value) => {\n            this.userIsRegister = value;\n          });\n          console.log(this.userIsRegister)\n          console.log('Successful data:', item);\n          this.modalService.dismissAll()\n          this.activeModal.close()\n          // this.router.navigateByUrl('/user/addPost');\n        } else {\n          this.tosterService.showError(' Incorrect username or password','Login Failed');\n        }\n      });\n\n      // Reset the form after submission\n      this.loginForm.reset();\n    }\n  }\n\n  navigateToSignUp() {\n    this.activeModal.close()\n    this.modalService.open(SignUpComponent, { centered: true });\n  }\n}\n*/\n","<div class=\"UserLogin\" *ngIf=\"!loader\">\n  <div class=\"login-container\" *ngIf=\"!forgotPassword\">\n    <h2>Login</h2>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\" >\n      <div class=\"form-group\">\n        <label for=\"id\">Email</label>\n        <input type=\"email\" id=\"id\" formControlName=\"id\" required placeholder=\"Enter Your email\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" id=\"password\" formControlName=\"password\" required>\n        <a class=\"forgotPassword\" (click)=\"forgetpassword()\">Forgotten password?</a>\n      </div>\n      <div class=\"btnContainer\">\n        <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n        <button class=\"btn btn-dark\" (click)=\"navigateToSignUp()\">Create Account</button>\n      </div>\n    </form>\n   \n  </div>\n <div class=\"forgotPassword\" *ngIf=\"forgotPassword\">\n  <h2>Forgot Password</h2>\n  <form [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onLogin()\" >\n    <div class=\"form-group\">\n      <label for=\"id\">Email</label>\n      <input type=\"email\" id=\"email\" formControlName=\"email\" required placeholder=\"Enter Your email\">\n    </div>\n    <button class=\"btn btn-info\" (click)=\"resetPassword()\">Reset Password</button>\n  </form>\n </div>\n</div> \n<button id=\"spinner\" *ngIf=\"loader\" mdbBtn color=\"success\" type=\"button\" disabled>\n  <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n  Loading...\n</button>","\nimport { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ServerService } from 'src/app/server.service';\nimport { SignUpComponent } from '../sign-up/sign-up.component';\nimport { AddPostComponent } from '../add-post/add-post.component';\nimport { DataService } from 'src/app/shared/data.service';\nimport { TosterService } from 'src/app/shared/toster.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FirestoreService } from 'src/app/shared/firestore.service';\nimport { docSnapshots } from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  searchInput: any;\n  visibleComments: number = 2;\n  userData: any;\n  latestPosts: any[] = [];\n  displayedPosts: any[] = [];\n  postsPerPage: number = 2;\n  userID: any;\n  isCurrentUser!: boolean;\n  otherUserId:any\n  allposts:any;\n  constructor(\n    private server: ServerService,\n    private modalService: NgbModal,\n    private dataService: DataService,\n    private tosterService: TosterService,\n    private route: ActivatedRoute,\n    private fireService:FirestoreService\n\n\n  ) {}\n\n  ngOnInit(): void {\n\n    this.userID = this.dataService.userId;\n\n    this.route.queryParamMap.subscribe((params) => {\n      this.otherUserId = params.get('id') || '';\n      if (this.otherUserId && this.otherUserId !== this.userID) {\n        this.isCurrentUser = false;\n        this.fetchUserData(this.otherUserId);\n      } else {\n        this.isCurrentUser = true;\n        this.fetchUserData(this.userID);\n      }\n    });\n\n  }\n \n  fetchUserData(id:any){\n    this.fireService.getUserById(id).then((docSnapshot) => {\n      if(docSnapshot.exists()){\n        this.userData = docSnapshot.data();\n        console.log(this.userData)\n        this.getLatestPosts(id);\n      }else{\n        console.log('User not found');\n      }\n    }).catch((error) => {\n      console.error('Data Not Fetched', error);\n    });\n   \n  }\n\n  async getLatestPosts(id:any) {\n     this.allposts = await this.fireService.getAllUserPosts(id);\n    this.latestPosts =    this.allposts.sort((a:any, b:any) => {\n      const dateA = new Date(a.createdAt).getTime();\n      const dateB = new Date(b.createdAt).getTime();\n      return dateB - dateA;\n    });\n    this.displayedPosts = this.latestPosts.slice(0, this.postsPerPage);\n  }\n\n  showMorePosts() {\n    const remainingPosts = this.latestPosts.slice(this.displayedPosts.length);\n    const nextPosts = remainingPosts.slice(0, this.postsPerPage);\n    this.displayedPosts = this.displayedPosts.concat(nextPosts);\n  }\n  \n  showMoreComments() {\n    this.visibleComments += 2;\n  }\n\n  deletePost(post: any) {\n    // console.log(post)\n    \n    const postIndex =  this.displayedPosts.findIndex(\n      (p: any) => p.id === post.id\n    );\n    // console.log(postIndex)\n    const userId = this.userID;\n    const postId = post.id\n    if (postIndex !== -1) {\n      this.displayedPosts.splice(postIndex, 1);\n      this.fireService.deletePost(userId, postId).then((res) => {\n        this.tosterService.showSuccess('Post Deleted Successfully', 'Success');\n      });\n    } else {\n      this.tosterService.showError('Post with ID not found in user data.', 'failed');\n      console.log(`Post with ID ${post.id} not found in user data.`);\n    }\n  }\n \n  private openModelWithComponent(component:any,dataName:any,data:any){\n    this.dataService.editMode = true;\n    const modalRef = this.modalService.open(component, {\n      centered: true,\n    });\n\n    if(dataName === 'userData'){\n      modalRef.componentInstance.userData = data;\n      modalRef.result.then(() => {this.fetchUserData(this.userID);})\n    }\n    else{\n      modalRef.componentInstance.post = data;\n    }\n   \n  }\n\n  editProfile() {\n    this.openModelWithComponent(SignUpComponent,'userData', this.userData);\n  }\n  editPost(post: any) {\n    this.openModelWithComponent(AddPostComponent,'post', post);\n  }\n\n  \n}\n\n\n/*// old code without clean\n\nimport { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ServerService } from 'src/app/server.service';\nimport { SignUpComponent } from '../sign-up/sign-up.component';\nimport { AddPostComponent } from '../add-post/add-post.component';\nimport { DataService } from 'src/app/shared/data.service';\nimport { HashtagServiceService } from 'src/app/shared/hashtag-service.service';\nimport { TosterService } from 'src/app/shared/toster.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n  searchInput: any;\n  visibleComments: number = 2;\n  userData: any;\n  latestPosts: any[] = [];\n  displayedPosts: any[] = [];\n  postsPerPage: number = 2;\n  userID: any;\n\n  constructor(\n    private server: ServerService,\n    private modalService: NgbModal,\n    private dataService: DataService,\n    private tosterService: TosterService\n  ) {}\n\n  ngOnInit(): void {\n    this.userID = this.dataService.userId;\n    this.server.getUser(this.userID).subscribe((data) => {\n      this.userData = data;\n      this.getLatestPosts();\n    });\n  }\n \n  fetchUserData(){\n    \n  }\n  getLatestPosts() {\n    const posts = this.userData.posts;\n    this.latestPosts = posts.slice().sort((a: any, b: any) => b.id - a.id);\n    this.displayedPosts = this.latestPosts.slice(0, this.postsPerPage); // Display the first 10 posts\n  }\n\n  showMorePosts() {\n    const remainingPosts = this.latestPosts.slice(this.displayedPosts.length);\n    const nextPosts = remainingPosts.slice(0, this.postsPerPage);\n    this.displayedPosts = this.displayedPosts.concat(nextPosts);\n  }\n  showMoreComments() {\n    this.visibleComments += 2;\n  }\n\n  editProfile() {\n    this.dataService.editMode = true;\n    const modalRef = this.modalService.open(SignUpComponent, {\n      centered: true,\n    });\n    modalRef.componentInstance.userData = this.userData;\n    console.log(modalRef.componentInstance.userData);\n  }\n  editPost(post: any) {\n    this.dataService.editMode = true;\n    const modalRef = this.modalService.open(AddPostComponent, {\n      centered: true,\n    });\n    modalRef.componentInstance.post = post;\n  }\n  deletePost(post: any) {\n    const postIndex = this.userData.posts.findIndex(\n      (p: any) => p.id === post.id\n    );\n    const id = this.userID;\n    if (postIndex !== -1) {\n      this.userData.posts.splice(postIndex, 1);\n      this.server.addPosts(id, this.userData).subscribe((res) => {\n        this.tosterService.showSuccess('Post Deleted Successfully', 'Success');\n      });\n    } else {\n      this.tosterService.showError('Post with ID not found in user data.', 'failed');\n\n      console.log(`Post with ID ${post.id} not found in user data.`);\n    }\n  }\n}\n*/","<div class=\"container\" >\n    <div class=\"coverContainer\">\n        <img class=\"coverImg\"\n            [src]=\"userData.coverPhoto\" alt=\"CoverPhoto\">\n    </div>\n    <div class=\"detailContainer\">\n        <div class=\"editContainer\"><img class=\"propic\"\n                [src]=\"userData.profilePic\" alt=\"\"><button (click)=\"editProfile()\" *ngIf=\"isCurrentUser\"\n                class=\"btn btn-light\"><mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\"\n                    fontIcon=\"edit\"></mat-icon><span>Edit Profile</span></button></div>\n        <div class=\"nameContainer\"><strong>{{userData.name}}</strong> <span *ngIf=\"isCurrentUser\">{{userData.username}}</span></div>\n        <div class=\"bioContainer\"><span>{{userData.bio}}</span></div>\n        <div class=\"infoContainer\">\n            <div class=\"info1\"><span><strong>Talks about : </strong>{{ userData.talksAbout}}</span> <span><strong>address : </strong>{{ userData.address}}</span>\n            </div>\n            <div class=\"info2\"><a [href]=\"userData.socialLink\"><span>{{userData.socialLink}}</span></a> <span><strong>joined :</strong> {{ userData.joinedDate.slice(0,8)}}</span></div>\n        </div>\n    </div>\n</div>\n<div class=\"search-container\">\n    <input type=\"text\" class=\"search-input\" placeholder=\"Search ... Questions.. \" aria-label=\"Search\"\n        [(ngModel)]=\"searchInput\">\n</div>\n<div class=\"postsContainer\">\n    <div *ngFor=\"let post of displayedPosts  | filter : searchInput\" class=\"postContainer\">\n        <div class=\"postNameHeading\"><img [src]=\"userData.profilePic\" class=\"postProPIc\"><h5>{{userData.name }}</h5></div>\n        <div ngbDropdown container=\"body\" class=\"dropdownAction\" *ngIf=\"isCurrentUser\">\n            <button type=\"button\" class=\"btn btn-outline-dark btn-sm actionBtn\" ngbDropdownToggle>Actions</button>\n            <div ngbDropdownMenu>\n                <button type=\"button\" ngbDropdownItem (click)=\"editPost(post)\">Edit</button>\n                <button type=\"button\" ngbDropdownItem (click)=\"deletePost(post)\">Delete</button>\n            </div>\n        </div>\n\n        <h3>{{ post.title }}</h3>\n        <p><strong>Answer:</strong> {{ post.content }}</p>\n        <img [src]=\"post.image || post.postImage\" alt=\"\">\n        <hr>\n        <button class=\"btn btn-primary likebtn\"> {{ post.likes }} {{ post.likes === 1 ? 'Like' :\n            'Likes' }}</button>\n        <div *ngIf=\"post.comments.length > 0\" class=\"allcommentContainer\">\n            <h5>All Comments</h5>\n            <div class=\"userCommentsContainer\">\n                <div *ngFor=\"let comment of post.comments.slice(0, visibleComments)\" class=\"commenteuser\">\n                    <strong>{{ comment.userId }}</strong>\n                    <p>{{ comment.comment }}</p>\n                </div>\n            </div>\n            <button class=\"btn btn-dark\" *ngIf=\"post.comments.length > visibleComments\" (click)=\"showMoreComments()\">\n                Show more comments\n            </button>\n        </div>\n        <hr>\n    </div>\n    <div *ngIf=\"latestPosts.length > displayedPosts.length\" class=\"load-more-button-container\">\n        <button class=\"btn btn-dark\" (click)=\"showMorePosts()\">Show More</button>\n      </div>\n</div>","import { Component,OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServerService } from 'src/app/server.service';\n\n@Component({\n  selector: 'app-show-user-profile',\n  templateUrl: './show-user-profile.component.html',\n  styleUrls: ['./show-user-profile.component.scss']\n})\nexport class ShowUserProfileComponent implements OnInit{\n  userID:any;\n  userData:any;\n  searchInput: any;\n  visibleComments: number = 2;\n  latestPosts: any[] = [];\n  displayedPosts: any[] = [];\n  postsPerPage: number = 2;\n\n constructor(private route: ActivatedRoute,private server:ServerService){}\n\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe((params) => {\n      this.userID = params.get('id') || '';\n    });\n    this.fetchUserData()\n  }\n\n  fetchUserData(){\n    this.server.getUser(this.userID).subscribe({\n      next :(data) => {\n      this.userData = data;\n      this.getLatestPosts();\n      },\n      error: (error) => {\n        console.error('Data Not Fetched', error);\n      }\n    }\n      );\n  }\n\n  getLatestPosts() {\n    const posts = this.userData.posts;\n    this.latestPosts = posts.slice().sort((a: any, b: any) => b.id - a.id);\n    this.displayedPosts = this.latestPosts.slice(0, this.postsPerPage);\n  }\n\n  showMorePosts() {\n    const remainingPosts = this.latestPosts.slice(this.displayedPosts.length);\n    const nextPosts = remainingPosts.slice(0, this.postsPerPage);\n    this.displayedPosts = this.displayedPosts.concat(nextPosts);\n  }\n  \n  showMoreComments() {\n    this.visibleComments += 2;\n  }\n\n\n}\n","<div class=\"container\" >\n    <div class=\"coverContainer\">\n        <img class=\"coverImg\"\n[src]=\"userData.coverPhoto\" alt=\"\">\n    </div>\n    <div class=\"detailContainer\">\n        <div class=\"editContainer\"><img class=\"propic\"\n                [src]=\"userData.profilePic\" alt=\"\">\n                <!-- <button (click)=\"editProfile()\"\n                class=\"btn btn-light\"><mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\"\n                    fontIcon=\"edit\"></mat-icon><span>Edit Profile</span></button> -->\n                </div>\n        <div class=\"nameContainer\"><strong>{{userData.name}}</strong> <span>{{userData.username}}</span></div>\n        <div class=\"bioContainer\"><span>{{userData.bio}}</span></div>\n        <div class=\"infoContainer\">\n            <div class=\"info1\"><span><strong>Talks about : </strong>{{ userData.talksAbout}}</span> <span><strong>address : </strong>{{ userData.address}}</span>\n            </div>\n            <div class=\"info2\"><a [href]=\"userData.socialLink\"><span>{{userData.socialLink}}</span></a> <span><strong>joined :</strong> {{ userData.joinedDate.slice(0,8)}}</span></div>\n        </div>\n    </div>\n</div>\n<div class=\"search-container\">\n    <input type=\"text\" class=\"search-input\" placeholder=\"Search ... Questions.. \" aria-label=\"Search\"\n        [(ngModel)]=\"searchInput\">\n</div>\n<div class=\"postsContainer\">\n    <div *ngFor=\"let post of displayedPosts  | filter : searchInput\" class=\"postContainer\">\n        <div class=\"postNameHeading\"><img [src]=\"userData.profilePic\" class=\"postProPIc\"><h5>{{userData.name }}</h5></div>\n        <!-- <div ngbDropdown container=\"body\" class=\"dropdownAction\">\n            <button type=\"button\" class=\"btn btn-outline-dark btn-sm actionBtn\" ngbDropdownToggle>Actions</button>\n            <div ngbDropdownMenu>\n                <button type=\"button\" ngbDropdownItem (click)=\"editPost(post)\">Edit</button>\n                <button type=\"button\" ngbDropdownItem (click)=\"deletePost(post)\">Delete</button>\n            </div>\n        </div> -->\n\n        <h3>{{ post.title }}</h3>\n        <p><strong>Answer:</strong> {{ post.content }}</p>\n        <img [src]=\"post.image\" alt=\"\">\n        <hr>\n        <button class=\"btn btn-primary likebtn\"> {{ post.likes }} {{ post.likes === 1 ? 'Like' :\n            'Likes' }}</button>\n        <div *ngIf=\"post.comments.length > 0\" class=\"allcommentContainer\">\n            <h5>All Comments</h5>\n            <div class=\"userCommentsContainer\">\n                <div *ngFor=\"let comment of post.comments.slice(0, visibleComments)\" class=\"commenteuser\">\n                    <strong>{{ comment.userId }}</strong>\n                    <p>{{ comment.comment }}</p>\n                </div>\n            </div>\n            <button class=\"btn btn-dark\" *ngIf=\"post.comments.length > visibleComments\" (click)=\"showMoreComments()\">\n                Show more comments\n            </button>\n        </div>\n        <hr>\n    </div>\n    <div *ngIf=\"latestPosts.length > displayedPosts.length\" class=\"load-more-button-container\">\n        <button class=\"btn btn-dark\" (click)=\"showMorePosts()\">Show More</button>\n      </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ServerService } from 'src/app/server.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DataService } from 'src/app/shared/data.service';\nimport { TosterService } from 'src/app/shared/toster.service';\nimport { FirestoreService } from 'src/app/shared/firestore.service';\nimport { FireAuthService } from 'src/app/shared/fire-auth.service';\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnDestroy, OnInit {\n  @Input() userData: any;\n  \n  userForm!: FormGroup;\n  currentDate: string;\n  editmode: boolean;\n  profilePics: string | undefined;\n  loader: boolean = false;\n  originalUserData: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public activeModal: NgbActiveModal,\n    private dataService: DataService,\n    private toastrService: TosterService,\n    private fireService: FirestoreService,\n    private fireAuth:FireAuthService\n  ) {\n    this.editmode = this.dataService.editMode;\n    const date = new Date();\n    this.currentDate = date.toLocaleString();\n    // this.currentDate = new Date().toLocaleString();\n  }\n\n  ngOnInit(): void {\n    this.editmode ? this.editformUser() : this.signupformUser();\n    this.fireService.getData().subscribe((res:any) => console.log(res));\n  }\n\n  signupformUser() {\n    this.userForm = this.formBuilder.group({\n      name: ['',],\n      username: ['', Validators.required],\n      bio: [''],\n      coverPhoto: [''],\n      profilePic: [''],\n      talksAbout: [''],\n      address: [''],\n      socialLink: [''],\n      phoneNo: [''],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required],\n    });\n  }\n\n  editformUser() {\n    this.originalUserData = { ...this.userData } ;\n    this.userForm = this.formBuilder.group({\n      name: [this.userData.name, Validators.required],\n      username: [this.userData.username, Validators.required],\n      bio: [this.userData.bio],\n      coverPhoto: [this.userData.coverPhoto],\n      profilePic: [this.userData.profilePic],\n      talksAbout: [this.userData.talksAbout],\n      address: [this.userData.address],\n      socialLink: [this.userData.socialLink],\n      phoneNo: [this.userData.phoneNo],\n      password: [\n        this.userData.password,\n        [Validators.required, Validators.minLength(6)],\n      ],\n      confirmPassword: [this.userData.confirmPassword, Validators.required],\n    });\n  }\n\n  get isPasswordMatch(): boolean {\n    return (\n      this.userForm.get('password')?.value ===\n      this.userForm.get('confirmPassword')?.value\n    );\n  }\n\n  onFileSelected(event: any) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      this.profilePics = reader.result as string;\n    };\n  }\n\n  \n  async onSignUp() {\n    if (this.userForm.valid) {\n      this.loader = true;\n      const userData = this.userForm.value;\n      userData.id = userData.username;\n      userData.joinedDate = this.currentDate;\n\n      if (this.profilePics) {\n        userData.profilePic = this.profilePics;\n      }\n\n      const SUCCESS_EDIT_MESSAGE = this.editmode? 'User Successfully Edited' : 'User Successfully Created';\n      const ERROR_EDIT_MESSAGE  = this.editmode ? 'Failed to edit user' : 'Failed to create user';\n\n     \n\n      try {\n        if (this.editmode) {\n          console.log('editmode active');\n\n          const updatedFields: any = {};\n\n          for (const key in userData) {\n            if (userData.hasOwnProperty(key) && userData[key] !== this.originalUserData[key]) {\n              updatedFields[key] = userData[key];\n            }\n          }\n    \n          if (Object.keys(updatedFields).length === 0) {\n            // No fields have been changed, you can handle this case as needed\n            this.activeModal.close();\n            this.userForm.reset();\n            this.dataService.editMode = false;\n            this.loader = false;\n            console.log('Nothing Has Changed');\n            return; // Exit the function\n          }\n    \n          updatedFields.id = userData.username;\n\n          if (Object.keys(updatedFields).length === 2 && 'joinedDate' in updatedFields && 'id' in updatedFields) {\n            this.toastrService.showWarning('nothing Changed', 'Warning');\n            this.activeModal.close();\n            this.userForm.reset();\n            this.dataService.editMode = false;\n            this.loader = false;\n            return;\n          }\n          for (const key in updatedFields) {\n            if (updatedFields.hasOwnProperty(key)) {\n              const updatedData: any = {}; //   const updatedData: any = { [key]: updatedFields[key] };\n              updatedData[key] = updatedFields[key];\n              if (Object.keys(updatedData).length > 0) {\n                await this.fireService.updateData(userData.id, updatedData);\n              }\n            }\n          }\n        } else {\n          await this.fireService.createUserData(userData.username, userData).then(() => {\n             this.fireAuth.signUp(userData.username, userData.password);\n              \n              // console.log('User added with custom ID: ', userData.username);\n              // this.dataService.userId = userData.username;\n              // this.dataService.setUserIsRegister(true);\n              sessionStorage.setItem('userId', userData.username);\n                sessionStorage.setItem('userName', userData.name);\n                sessionStorage.setItem('userProfilePic', userData.profilePic || '');\n                sessionStorage.setItem('UserIsRegister', 'true');\n                console.log(this.dataService.userId,this.dataService.userName,this.dataService.getUserIsRegister())\n                this.dataService.userId =sessionStorage.getItem('userId')\n                this.dataService.userName =sessionStorage.getItem('userName')\n                this.dataService.userProfilePic = sessionStorage.getItem('userProfilePic')\n                this.dataService.setUserIsRegister(this.dataService.getUserIsRegisteredFromLocalStorage());\n\n              this.loader = false;\n            })\n            .catch((error) => {\n              console.error('Error adding user: ', error);\n              this.loader = false;\n            });\n          // await this.fireService.createData(userData).then(data => console.log(data))\n        }\n        this.toastrService.showSuccess(SUCCESS_EDIT_MESSAGE, 'Success');\n        this.activeModal.close();\n        this.userForm.reset();\n        this.dataService.editMode = false;\n        this.loader = false;\n      } catch (error) {\n        this.toastrService.showError(ERROR_EDIT_MESSAGE , 'Error');\n        this.activeModal.close();\n        this.userForm.reset();\n        this.dataService.editMode = false;\n        this.loader = false;\n        console.error('Error:', error);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.dataService.editMode = false;\n    console.log(this.dataService.editMode);\n  }\n}\n\n// old code without Clean code\n/* @Input() userData: any;\n  // userData: any;\n  userForm!: FormGroup;\n  isMatch!: boolean;\n  isValid!: any;\n  joinedDateFormatted: any;\n  currentDate: any;\n  editmode: boolean;\n  constructor(\n    private formBuilder: FormBuilder,\n    private server: ServerService,\n    public activeModal: NgbActiveModal,\n    private dataService:DataService,\n    private toastrService:TosterService\n  ) {\n    this.editmode = this.dataService.editMode;\n    const date = new Date();\n    this.currentDate = date.toLocaleString();\n    // this.currentDate = new Date().toLocaleString();\n\n  }\n\n  ngOnInit(): void {\n    // if (this.editmode) {\n    //   console.log(this.editmode)\n    //   this.editformUser()\n    // } else {\n    //   this.signupformUser();\n    // }\n    // console.log('hey')\n    this.editmode ? this.editformUser() : this.signupformUser();\n  }\n\n  signupformUser() {\n    this.userForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      username: ['', Validators.required],\n      bio: [''],\n      coverPhoto: [''],\n      profilePic: [''],\n      talksAbout: [''],\n      address: [''],\n      socialLink: [''],\n      phoneNo: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required],\n      posts: this.formBuilder.array([]),\n    });\n  }\n\n  editformUser() {\n    this.userForm = this.formBuilder.group({\n      name: [this.userData.name, Validators.required],\n      username: [this.userData.username, Validators.required],\n      bio: [this.userData.bio],\n      coverPhoto: [this.userData.coverPhoto],\n      profilePic: [this.userData.profilePic],\n      talksAbout: [this.userData.talksAbout],\n      address: [this.userData.address],\n      socialLink: [this.userData.socialLink],\n      phoneNo: [this.userData.phoneNo, Validators.required],\n      password: [\n        this.userData.password,\n        [Validators.required, Validators.minLength(6)],\n      ],\n      confirmPassword: [this.userData.confirmPassword, Validators.required],\n    });\n  }\n\n  ConfirmPass() {\n    this.isMatch =\n      this.userForm.get('password')?.value ===\n      this.userForm.get('confirmPassword')?.value;\n  }\n\n  onSignUp() {\n    if (this.userForm.valid) {\n      if (this.editmode) {\n        const userData = this.userForm.value;\n        userData.id = userData.username;\n        userData.joinedDate = this.currentDate;\n        this.server.patchUser(userData.username,userData).subscribe((res) => {\n          this.toastrService.showSuccess('User SuccesFully Edited', 'Succesfull');\n          this.activeModal.close();\n          this.userForm.reset();\n          this.dataService.editMode = false\n        },\n        (error) => {\n          this.toastrService.showError('Failed to edit user', 'Error');\n          console.error('Error editing user:', error);\n        })\n      } else {\n        const userData = this.userForm.value;\n        userData.id = userData.username;\n        userData.joinedDate = this.currentDate;\n        this.server.addUser(userData).subscribe((res) => {\n          this.toastrService.showSuccess('User SuccesFully Created', 'Succesfull');\n          this.activeModal.close();\n          this.userForm.reset();\n        },\n        (error) => {\n          this.toastrService.showError('Failed to create user', 'Error');\n          console.error('Error creating user:', error);\n        });\n      }\n    }\n  }\n  ngOnDestroy(): void {\n    this.dataService.editMode = false\n    console.log(this.dataService.editMode)\n  }*/\n","<div class=\"CreateUserContainer\" *ngIf=\"!loader\">\n    <h2>{{editmode ? 'Edit Data' : 'SignUp'}}</h2>\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"onSignUp()\">\n      <div>\n        <label for=\"username\">Name :</label>\n        <input type=\"text\" id=\"name\" formControlName=\"name\"  placeholder=\"Your Name\" >\n      </div>\n      <div>\n        <label for=\"username\">Email :</label>\n        <input type=\"email\" id=\"id\" formControlName=\"username\" required placeholder=\"Enter Your Email\">\n      </div>\n      <div>\n        <label for=\"username\">bio :</label>\n        <input type=\"text\" id=\"bio\" formControlName=\"bio\"  placeholder=\"Enter About Yourself\">\n      </div>\n      <div>\n        <label for=\"username\">CoverPhoto Link :</label>\n        <input type=\"text\" id=\"coverPhoto\" formControlName=\"coverPhoto\"  placeholder=\"Add Image Link\">\n      </div>\n      <div>\n        <label for=\"username\">Profile Pic :</label>\n        <input type=\"file\" id=\"profilePic\"  formControlName=\"profilePic\"  placeholder=\"Add Image Link\" (change)=\"onFileSelected($event)\" accept=\"image/*\">\n      </div>\n      <div>\n        <label for=\"username\">Talks About :</label>\n        <input type=\"text\" id=\"talksAbout\" formControlName=\"talksAbout\"  placeholder=\"Ex.. Computer , Programming\">\n      </div>\n      <div>\n        <label for=\"username\">Address :</label>\n        <input type=\"text\" id=\"address\" formControlName=\"address\"  placeholder=\"Ex.. Maharashtra , India\">\n      </div>\n      <div>\n        <label for=\"username\">Social Links :</label>\n        <input type=\"text\" id=\"socialLink\" formControlName=\"socialLink\"  placeholder=\"Add Other Social Links\">\n      </div>\n      <div>\n        <label for=\"phoneNo\">Phone Number :</label>\n        <input type=\"text\" id=\"phoneNo\" formControlName=\"phoneNo\"  placeholder=\"Ex..999999999\">\n      </div>\n      <ng-container *ngIf=\"!editmode\">\n      <div>\n        <label for=\"password\">Password :</label>\n        <input type=\"password\" id=\"password\" formControlName=\"password\" required placeholder=\"Enter Password\" >\n        <div *ngIf=\"userForm.controls['password'].touched && userForm.controls['password'].errors?.['required']\" class=\"error-message\">\n          Password is required.\n        </div> \n        <div *ngIf=\"userForm.controls['password'].errors?.['minlength'] && userForm.controls['password'].touched\" class=\"error-message\">\n          Password must be at least 6 characters long.\n        </div> \n      </div>\n      <div>\n        <label for=\"password\">Confirm Password :</label>\n        <input type=\"password\" id=\"confirmPassword\" formControlName=\"confirmPassword\" required placeholder=\"Confirm Password\">\n        <div *ngIf=\"userForm.controls['confirmPassword'].touched && userForm.controls['confirmPassword'].errors?.['required']\" class=\"error-message\">\n          Password is required.\n        </div>\n        <span class=\"error-message\" *ngIf=\"userForm.controls['confirmPassword'].dirty && !isPasswordMatch\">Password Does Not Matched</span>\n      </div>\n    </ng-container>\n      <button type=\"submit\" [disabled]=\"userForm.controls['username'].errors || !isPasswordMatch || !userForm.valid\">{{ editmode ? 'Update User' : 'Create User' }}</button>\n    </form>\n  </div>\n  <button id=\"spinner\" *ngIf=\"loader\" mdbBtn color=\"success\" type=\"button\" disabled>\n    <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n    Loading...\n  </button>","import { Component ,AfterViewInit} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from 'src/app/shared/data.service';\nimport { HashtagServiceService } from 'src/app/shared/hashtag-service.service';\n\n@Component({\n  selector: 'app-trending-hashtags-posts',\n  templateUrl: './trending-hashtags-posts.component.html',\n  styleUrls: ['./trending-hashtags-posts.component.scss']\n})\nexport class TrendingHashtagsPostsComponent implements AfterViewInit {\n  trendingHashtags: any[] = [];\n\n  constructor(private hastagService: HashtagServiceService,private dataService:DataService,private router:Router) {\n \n   }\n\n  ngAfterViewInit(): void {\n    this.hastagService.trendingHashtags$.subscribe((hashtags) => {\n      this.trendingHashtags = hashtags;\n      console.log(this,this.trendingHashtags)\n    });\n  }\n\n  navigateToHashtag(hashtagName:any){\n    this.router.navigateByUrl(`allposts?hashtag=${hashtagName}`)\n    this.dataService.callGetAllUsersFunction();\n  }\n}\n","<!-- <h4><mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" fontIcon=\"tag\"> </mat-icon>Trending Topics</h4> -->\n<!-- <img src=\"https://cdn-jhplb.nitrocdn.com/VKsDToympzMSvIilAODKriQzgztJlXnn/assets/images/optimized/rev-f97e5f0/i0.wp.com/trendingtopics.digital/wp-content/uploads/2023/07/b9d198e5c96ea170a48461416647b9f6.cropped-harlez.png\" alt=\"\"> -->\n<img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSm1h_66N7cPiU-ZjoTVny_Y8OMLenZWW2Z4Q&usqp=CAU\" alt=\"\">\n<div class=\"trendingContainer\">\n    <div *ngFor=\"let hashtag of trendingHashtags\" class=\"hashtag\">\n        <button class=\"btn btn-light\" (click)=\"navigateToHashtag(hashtag.name)\">#{{ hashtag.name }} ({{ hashtag.count }})</button> \n     </div>\n</div>\n<hr/>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServerService } from 'src/app/server.service';\nimport { FirestoreService } from 'src/app/shared/firestore.service';\nimport { HashtagServiceService } from 'src/app/shared/hashtag-service.service';\n\n@Component({\n  selector: 'app-trending-posts',\n  templateUrl: './trending-posts.component.html',\n  styleUrls: ['./trending-posts.component.scss'],\n})\nexport class TrendingPostsComponent implements OnInit {\n  hashtagName: string = '';\n  allUsers: any;\n  filteredPosts: any[] = [];\n  searchInput: any;\n  allPosts: any;\n  constructor(\n    private route: ActivatedRoute,\n    private server: ServerService,\n    private hashtagService: HashtagServiceService,\n    private fireservice: FirestoreService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe((params) => {\n      this.hashtagName = params.get('hashtag') || '';\n      this.getallUsers();\n    });\n  }\n\n  getallUsers() {\n    this.server.getAllUser().subscribe((users) => {\n      this.allUsers = users;\n      this.filterPostsByHashtag();\n    });\n  }\n\n  async filterPostsByHashtag() {\n    this.filteredPosts = [];\n\n    try {\n      this.allUsers = await this.fireservice.getAllUsers();\n\n      for (const user of this.allUsers) {\n        const UserallPosts = await this.fireservice.getAllUserPosts(user.id);\n\n        const updatedPosts = UserallPosts.map((post) => {\n          return {\n            ...post,\n            name: user.name,\n            profilePic: user.profilePic,\n          };\n        });\n\n        this.allPosts.push(...updatedPosts);\n      }\n\n      this.allPosts.forEach((post: any) => {\n        const hashtags = this.hashtagService.extractHashtagsFromPostContent(\n          post.content\n        );\n        if (hashtags.includes(this.hashtagName)) {\n          this.filteredPosts.push(post);\n        }\n      });\n    } catch (error) {\n      console.error('Error fetching users and posts:', error);\n    }\n  }\n}\n","<div *ngIf=\"filteredPosts.length > 0\">\n    <h2>Posts with Hashtag: {{ hashtagName }}</h2>\n    <div *ngFor=\"let post of filteredPosts\">\n      <h3>{{ post.title }}</h3>\n      <p>{{ post.content }}</p>\n      <!-- Add other post details here -->\n    </div>\n  </div>\n  \n  <div *ngIf=\"filteredPosts.length === 0\">\n    <h2>No posts found with Hashtag: {{ hashtagName }}</h2>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { AddPostComponent } from './add-post/add-post.component';\nimport { AllPostsComponent } from './all-posts/all-posts.component';\n// import { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { TrendingPostsComponent } from './trending-posts/trending-posts.component';\n// import { ShowUserProfileComponent } from './show-user-profile/show-user-profile.component';\n\nconst routes: Routes = [\n  \n  {path:'',component:AllPostsComponent},\n  // {path:'home',component:HomeComponent},\n  // {path:'login',component:LoginComponent},\n  // {path:'signUp',component:SignUpComponent},\n  {path:'addPost',component:AddPostComponent},\n  { path: 'allposts', component: AllPostsComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'trendingPost', component: TrendingPostsComponent },\n  // { path: 'showUser', component: ShowUserProfileComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { LoginComponent } from './login/login.component';\n// import { PostsComponent } from './posts/posts.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { UserComponent } from './user.component';\nimport { AddPostComponent } from './add-post/add-post.component';\nimport { AllPostsComponent } from './all-posts/all-posts.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\n// import { HomeComponent } from './home/home.component';\nimport { FilterPipe } from '../shared/filter.pipe';\nimport { ProfileComponent } from './profile/profile.component';\nimport { TrendingHashtagsPostsComponent } from './trending-hashtags-posts/trending-hashtags-posts.component';\nimport { TrendingPostsComponent } from './trending-posts/trending-posts.component';\nimport { ShowUserProfileComponent } from './show-user-profile/show-user-profile.component';\nimport { GoogleLoginComponent } from './google-login/google-login.component';\nimport { InstructionsComponent } from './instructions/instructions.component';\n\n\n@NgModule({\n  declarations: [\n    // UserComponent,\n    UserComponent,\n    SignUpComponent,\n    LoginComponent,\n    // PostsComponent,\n    AddPostComponent,\n    AllPostsComponent,\n    HeaderComponent,\n    FooterComponent,\n    // HomeComponent,\n    FilterPipe,\n    ProfileComponent,\n    TrendingHashtagsPostsComponent,\n    TrendingPostsComponent,\n    ShowUserProfileComponent,\n    GoogleLoginComponent,\n    InstructionsComponent\n  ],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    SharedModule,\n    \n  ],\n  exports: [HeaderComponent, FooterComponent,TrendingHashtagsPostsComponent,InstructionsComponent],\n})\nexport class UserModule { }\n","/// <reference types=\"@angular/localize\" />\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","routes","path","redirectTo","pathMatch","loadChildren","then","m","UserModule","AppRoutingModule","forRoot","imports","i1","exports","AppComponent","constructor","title","windowWidth","window","innerWidth","ngOnInit","onResize","event","target","selectors","hostBindings","AppComponent_HostBindings","rf","ctx","$event","i0","ɵɵresolveWindow","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","BrowserModule","BrowserAnimationsModule","HttpClientModule","SharedModule","NgbModule","ToastrModule","provideFirebaseApp","initializeApp","getFirestore","provideFirestore","getAuth","provideAuth","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AppModule","bootstrap","declarations","i2","FirebaseAppModule","i3","FirestoreModule","i4","AuthModule","ServerService","http","baseUrl","userUrl","getAllUser","get","addUser","data","post","getUser","userId","patchUser","userData","patch","updateUser","patchData","ɵɵinject","HttpClient","factory","ɵfac","providedIn","CachingService","cache","set","key","clear","BehaviorSubject","Subject","DataService","userInstructions","editMode","sessionStorage","getItem","userName","userProfilePic","userIsRegister","getUserIsRegisteredFromLocalStorage","userIsRegister$","asObservable","getAllUsersFunctionSubject","getAllUsersFunction$","setUserIsRegister","value","next","getUserIsRegister","storedValue","callGetAllUsersFunction","FilterPipe","transform","hotelsData","searchInput","toLowerCase","filter","hotel","JSON","stringify","includes","pure","sendPasswordResetEmail","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","FireAuthService","dataService","user","auth","onAuthStateChanged","console","log","signIn","email","password","_this","_asyncToGenerator","catch","error","signUp","getDoc","getDocs","setDoc","addDoc","doc","collection","collectionData","deleteDoc","updateDoc","FirestoreService","fireService","cachingService","getData","cachedData","userCollection","idField","getUserById","id","userDocRef","createData","createUserData","userCollectionRef","getPostWithID","postId","postDocRef","postSnapshot","exists","Error","getAllUsers","_this2","usersCollectionRef","usersQuerySnapshot","users","forEach","push","getAllUserPosts","_this3","cacheKey","postsCollectionRef","postsQuerySnapshot","posts","postData","getAllPosts","_this4","createPost","_this5","newPostRef","newPostId","updatePost","deletePost","_this6","getPost","_this7","postDocSnapshot","updatedData","_this8","addCommentToPost","commentData","_this9","updatedComments","comments","incrementLikes","_this10","updatedLikes","likes","updateTitleAndContent","newTitle","newContent","_this11","content","updateData","deleteData","docref","Firestore","HashtagServiceService","fireservice","trendingHashtags","trendingHashtagsSubject","trendingHashtags$","extractHashtagsFromPostContent","regex","matches","match","map","substring","updateTrendingHashtags","allPostss","hashtagsMap","Map","hashtags","tag","lowercaseTag","count","Array","from","entries","name","sort","a","b","slice","CommonModule","FormsModule","ReactiveFormsModule","NgbTooltipModule","NgbDropdownModule","MatIconModule","TosterService","toastr","showSuccess","msg1","msg2","success","positionClass","timeOut","closeButton","showWarning","warning","showError","ToastrService","Validators","ɵɵtext","ɵɵlistener","AddPostComponent_div_15_Template_input_change_9_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","onFileSelected","ɵɵadvance","ɵɵproperty","_r2","ctx_r0","postImage","ɵɵsanitizeUrl","AddPostComponent","formBuilder","server","activeModal","modalService","tosterService","sanitizer","loading","editmode","date","Date","currentDate","toLocaleString","createPostForm","userID","docSnapshot","postForm","patchValue","image","group","required","array","file","files","reader","FileReader","readAsDataURL","onload","result","onSubmit","valid","successMessage","errorMessage","createdAt","resetFormAndCloseModal","err","reset","dismissAll","close","ngOnDestroy","ɵɵdirectiveInject","FormBuilder","NgbActiveModal","NgbModal","i5","i6","i7","DomSanitizer","inputs","decls","vars","consts","template","AddPostComponent_Template","AddPostComponent_Template_a_click_4_listener","AddPostComponent_Template_form_ngSubmit_6_listener","ɵɵtemplate","AddPostComponent_div_15_Template","AddPostComponent_button_18_Template","ɵɵtextInterpolate","ɵɵtextInterpolate2","post_r2","AllPostsComponent_div_3_div_14_button_2_Template_button_click_0_listener","_r11","$implicit","ctx_r9","addlike","AllPostsComponent_div_3_div_14_button_2_Template","AllPostsComponent_div_3_div_14_Template_button_click_6_listener","_r15","_r8","ɵɵreference","ctx_r13","addComment","ctx_r4","userIsRegistered","comment_r18","userProfile","comment","AllPostsComponent_div_3_div_15_button_5_Template_button_click_0_listener","_r20","ctx_r19","showMoreComments","AllPostsComponent_div_3_div_15_div_4_Template","AllPostsComponent_div_3_div_15_button_5_Template","ctx_r5","visibleComments","length","AllPostsComponent_div_3_Template_div_click_1_listener","restoredCtx","_r23","ctx_r22","navigateToUser","AllPostsComponent_div_3_button_13_Template","AllPostsComponent_div_3_div_14_Template","AllPostsComponent_div_3_div_15_Template","profilePic","ɵɵtextInterpolate1","AllPostsComponent_button_6_Template_button_click_0_listener","_r25","ctx_r24","showMorePosts","AllPostsComponent","hashtagService","route","router","allUsers","newComment","likedPosts","Set","latestPosts","displayedPosts","initialPostsToShow","hashtagName","filteredPosts","queryParamMap","subscribe","params","filterPostsByHashtag","isRegistered","likedPostsString","localStorage","parse","loadAllUserPosts","loadUserData","UserallPosts","updatedPosts","dateA","getTime","dateB","endIndex","additionalPosts","has","add","setItem","postIndex","findIndex","p","commentText","trim","postUserId","navigateByUrl","ActivatedRoute","Router","AllPostsComponent_Template","AllPostsComponent_Template_input_ngModelChange_1_listener","AllPostsComponent_div_3_Template","AllPostsComponent_button_6_Template","ɵɵpipeBind2","FooterComponent","FooterComponent_Template","GoogleLoginComponent","gmailLoginSuccsfull","response","GoogleLoginComponent_Template","LoginComponent","HeaderComponent_button_10_Template_button_click_0_listener","_r5","navigateToLogin","ɵɵpureFunction1","_c0","activeButton","HeaderComponent_button_11_Template_button_click_0_listener","_r7","ctx_r6","navigateToCreatePost","ctx_r1","HeaderComponent_button_12_Template_button_click_0_listener","_r9","ctx_r8","navigateToLoginProfile","ctx_r2","HeaderComponent_button_13_Template_button_click_0_listener","ctx_r10","logout","HeaderComponent","navigateToHome","open","centered","backdrop","HeaderComponent_Template","HeaderComponent_Template_button_click_6_listener","HeaderComponent_button_10_Template","HeaderComponent_button_11_Template","HeaderComponent_button_12_Template","HeaderComponent_button_13_Template","InstructionsComponent_div_0_Template_button_click_28_listener","closeModal","InstructionsComponent","userService","instructions","InstructionsComponent_Template","InstructionsComponent_div_0_Template","SignUpComponent","LoginComponent_div_0_div_1_Template_form_ngSubmit_3_listener","onLogin","LoginComponent_div_0_div_1_Template_a_click_12_listener","forgetpassword","LoginComponent_div_0_div_1_Template_button_click_17_listener","ctx_r7","navigateToSignUp","loginForm","invalid","LoginComponent_div_0_div_2_Template_form_ngSubmit_3_listener","LoginComponent_div_0_div_2_Template_button_click_8_listener","resetPassword","forgotPasswordForm","LoginComponent_div_0_div_1_Template","LoginComponent_div_0_div_2_Template","forgotPassword","fireAuth","loader","loginformUser","forgetPasswordForm","res","handleSuccessfulLogin","handleLoginFailure","i8","LoginComponent_Template","LoginComponent_div_0_Template","LoginComponent_button_1_Template","ProfileComponent_button_6_Template_button_click_0_listener","editProfile","username","ProfileComponent_div_35_div_5_Template_button_click_4_listener","post_r6","editPost","ProfileComponent_div_35_div_5_Template_button_click_6_listener","ctx_r12","comment_r16","ProfileComponent_div_35_div_16_button_5_Template_button_click_0_listener","_r18","ctx_r17","ProfileComponent_div_35_div_16_div_4_Template","ProfileComponent_div_35_div_16_button_5_Template","ProfileComponent_div_35_div_5_Template","ProfileComponent_div_35_div_16_Template","isCurrentUser","ProfileComponent_div_37_Template_button_click_1_listener","_r21","ctx_r20","ProfileComponent","postsPerPage","otherUserId","fetchUserData","getLatestPosts","allposts","remainingPosts","nextPosts","concat","splice","openModelWithComponent","component","dataName","modalRef","componentInstance","ProfileComponent_Template","ProfileComponent_button_6_Template","ProfileComponent_span_10_Template","ProfileComponent_Template_input_ngModelChange_33_listener","ProfileComponent_div_35_Template","ProfileComponent_div_37_Template","coverPhoto","bio","talksAbout","address","socialLink","joinedDate","comment_r6","ShowUserProfileComponent_div_35_div_15_button_5_Template_button_click_0_listener","ShowUserProfileComponent_div_35_div_15_div_4_Template","ShowUserProfileComponent_div_35_div_15_button_5_Template","ShowUserProfileComponent_div_35_div_15_Template","ShowUserProfileComponent_div_37_Template_button_click_1_listener","ShowUserProfileComponent","ShowUserProfileComponent_Template","ShowUserProfileComponent_Template_input_ngModelChange_33_listener","ShowUserProfileComponent_div_35_Template","ShowUserProfileComponent_div_37_Template","ɵɵelementContainerStart","SignUpComponent_div_0_ng_container_40_div_5_Template","SignUpComponent_div_0_ng_container_40_div_6_Template","SignUpComponent_div_0_ng_container_40_div_11_Template","SignUpComponent_div_0_ng_container_40_span_12_Template","ɵɵelementContainerEnd","userForm","controls","touched","errors","dirty","isPasswordMatch","SignUpComponent_div_0_Template_form_ngSubmit_3_listener","onSignUp","SignUpComponent_div_0_Template_input_change_23_listener","SignUpComponent_div_0_ng_container_40_Template","toastrService","editformUser","signupformUser","phoneNo","minLength","confirmPassword","originalUserData","profilePics","SUCCESS_EDIT_MESSAGE","ERROR_EDIT_MESSAGE","updatedFields","hasOwnProperty","Object","keys","SignUpComponent_Template","SignUpComponent_div_0_Template","SignUpComponent_button_1_Template","TrendingHashtagsPostsComponent_div_2_Template_button_click_1_listener","_r3","hashtag_r1","navigateToHashtag","TrendingHashtagsPostsComponent","hastagService","ngAfterViewInit","TrendingHashtagsPostsComponent_Template","TrendingHashtagsPostsComponent_div_2_Template","post_r3","TrendingPostsComponent_div_0_div_3_Template","TrendingPostsComponent","getallUsers","allPosts","TrendingPostsComponent_Template","TrendingPostsComponent_div_0_Template","TrendingPostsComponent_div_1_Template","UserRoutingModule","forChild","UserComponent","UserComponent_Template","styles","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}